{"version":3,"sources":["actions/errorActions.js","actions/types.js","actions/authActions.js","actions/itemActions.js","components/WeatherSearch.js","components/useDebounce.js","components/Nearby.js","components/auth/Register.js","components/Dashboard.js","reducers/itemReducer.js","reducers/authReducer.js","reducers/index.js","reducers/errorReducer.js","store.js","components/auth/Login.js","App.js","serviceWorker.js","index.js"],"names":["returnErrors","msg","status","id","type","payload","loadUser","dispatch","getState","axios","get","tokenConfig","then","res","data","catch","err","response","logout","token","auth","config","headers","setItemsLoading","connect","state","isAuthenticated","user","addItem","item","post","useState","weatherData","setWeatherData","initialQuery","setInitialQuery","searchTerm","setSearchTerm","itemToShow","setItemToShow","debouncedSearchTerm","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","search","a","async","fetch","json","slice","console","error","Promise","all","map","woeid","prevArray","showMoreStuff","log","className","onChange","e","target","placeholder","length","src","alt","i","key","Button","variant","color","onClick","preItemToShow","newItemShow","filter","showAdded","newItem","name","title","weathers","newID","_id","onAddItemClick","includes","component","timezone","time","Carousel","interval","Item","consolidated_weather","weather_state_abbr","weather_state_name","the_temp","toFixed","predictability","weather","day","applicable_date","Date","getDay","parseInt","month","getMonth","Nearby","Component","Register","email","password","handleChange","setState","handleSubmit","preventDefault","newUser","props","register","history","prevProps","this","noValidate","onSubmit","TextField","required","label","margin","autoComplete","body","JSON","stringify","push","withRouter","Dashboard","onLogoutClick","logoutUser","onLogout","onDeleteClick","deleteItem","onHandleShow","handleShow","getItems","items","delete","initialState","showMore","loading","localStorage","getItem","isLoading","combineReducers","action","setItem","removeItem","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","Login","login","App","React","setValue","location","useLocation","useHistory","BottomNavigation","event","newValue","showLabels","BottomNavigationAction","Link","to","icon","path","WeatherSearch","exact","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.674b96a4.chunk.js","sourcesContent":["import { GET_ERRORS, CLEAR_ERRORS } from \"./types\";\n// return errors\nexport const returnErrors = (msg, status, id = null) => {\n  return {\n    type: GET_ERRORS,\n    payload: { msg, status, id }\n  };\n};\n// clear errors\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};\n","export const GET_ITEMS = \"GET_ITEMS\";\nexport const ADD_ITEM = \"ADD_ITEM\";\nexport const DELETE_ITEM = \"DELETE_ITEM\";\nexport const ITEMS_LOADING = \"ITEMS_LOADING\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\nexport const SHOW_MORE = \"SHOW_MORE\";\n","import {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL\n} from \"./types\";\nimport { returnErrors } from \"./errorActions\";\nimport axios from \"axios\";\n// check token and load user\n\nexport const loadUser = () => (dispatch, getState) => {\n  // user loading\n  dispatch({ type: USER_LOADING });\n\n  axios\n    .get(\"/api/auth/user\", tokenConfig(getState))\n    .then(res =>\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({ type: AUTH_ERROR });\n    });\n};\n// register user\nexport const register = ({ name, email, password }, history) => dispatch => {\n  // headers\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  };\n  // request body\n  const body = JSON.stringify({ name, email, password });\n  axios\n    .post(\"/api/users\", body, config)\n\n    .then(res =>\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      })\n    )\n    .then(res => history.push(\"/login\")) // re-direct to login on successful register\n\n    .catch(err => {\n      dispatch({\n        type: REGISTER_FAIL\n      });\n      dispatch(\n        returnErrors(err.response.data, err.response.status, \"REGISTER_FAIL\")\n      );\n    });\n};\n// login user\nexport const login = ({ email, password }, history) => dispatch => {\n  // headers\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  };\n  // request body\n  const body = JSON.stringify({ email, password });\n  axios\n    .post(\"/api/auth\", body, config)\n\n    .then(res =>\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      })\n    )\n    .then(res => history.push(\"/\"))\n    .catch(err => {\n      dispatch({\n        type: LOGIN_FAIL\n      });\n      dispatch(\n        returnErrors(err.response.data, err.response.status, \"LOGIN_FAIL\")\n      );\n    });\n};\n\n// logout user\nexport const logout = () => {\n  return {\n    type: LOGOUT_SUCCESS\n  };\n};\n\n// setup config/headers and token\nexport const tokenConfig = getState => {\n  // get token from localstorage\n  const token = getState().auth.token;\n\n  // set headers\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  };\n  // if there is token , add to headers\n  if (token) {\n    config.headers[\"x-auth-token\"] = token;\n  }\n  return config;\n};\n","import {\n  GET_ITEMS,\n  ADD_ITEM,\n  DELETE_ITEM,\n  ITEMS_LOADING,\n  SHOW_MORE\n} from \"./types\";\nimport axios from \"axios\";\nimport { tokenConfig } from \"../actions/authActions\";\nimport { returnErrors } from \"../actions/errorActions\";\n\nexport const getItems = () => dispatch => {\n  dispatch(setItemsLoading());\n  axios\n    .get(\"/api/items\")\n    .then(res =>\n      dispatch({\n        type: GET_ITEMS,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\nexport const deleteItem = id => (dispatch, getState) => {\n  axios\n    .delete(`/api/items/${id}`, tokenConfig(getState))\n    .then(res =>\n      dispatch({\n        type: DELETE_ITEM,\n        payload: id\n      })\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\nexport const addItem = item => (dispatch, getState) => {\n  axios\n    .post(\"/api/items\", item, tokenConfig(getState))\n    .then(res =>\n      dispatch({\n        type: ADD_ITEM,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\nexport const handleShow = item => {\n  return {\n    type: SHOW_MORE,\n    payload: item\n  };\n};\nexport const setItemsLoading = () => {\n  return {\n    type: ITEMS_LOADING\n  };\n};\n","import React, { useState, useEffect } from \"react\";\nimport useDebounce from \"./useDebounce\";\nimport { Button } from \"@material-ui/core\";\nimport { Carousel } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { addItem } from \"../actions/itemActions\";\n\nconst WeatherList = ({ addItem, isAuthenticated, user }) => {\n  const [weatherData, setWeatherData] = useState([]);\n  const [initialQuery, setInitialQuery] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [itemToShow, setItemToShow] = useState([]);\n  //debounce the search term\n  const debouncedSearchTerm = useDebounce(searchTerm, 700);\n  const handleChange = e => {\n    setSearchTerm(e.target.value);\n  };\n  useEffect(() => {\n    if (debouncedSearchTerm) {\n      getQuery(debouncedSearchTerm);\n    } else {\n      setInitialQuery([]);\n    }\n  }, [debouncedSearchTerm]);\n\n  // query many cities worldID, only 11 at a time\n  async function getQuery(search) {\n    await fetch(\n      `https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/search/?query=${search}`\n    )\n      .then(res => res.json())\n      .then(res => setInitialQuery(res.slice(0, 10)))\n      .catch(err => {\n        console.error(err);\n      });\n  }\n\n  // use each worldID to fetch each city weather data\n  useEffect(() => {\n    setWeatherData([]);\n    const showMoreStuff = false;\n    async function getWeather() {\n      Promise.all(\n        initialQuery.map(item => {\n          fetch(\n            `https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/${item.woeid}/`\n          )\n            .then(res => res.json())\n            .then(res =>\n              setWeatherData(prevArray => [\n                ...prevArray,\n                { res, showMoreStuff }\n              ])\n            )\n            .catch(err => {\n              console.error(err);\n            });\n          return null;\n        })\n      );\n    }\n    getWeather();\n  }, [initialQuery]);\n\n  // onClick to toggle boolean to show more\n  // function handleShow(id) {\n  //   const newData = weatherData.map(item => {\n  //     if (item.res.woeid === id) {\n  //       return {\n  //         ...item,\n  //         showMoreStuff: !item.showMoreStuff\n  //       };\n  //     } else return item;\n  //   });\n  //   setWeatherData(newData);\n  // }\n  // funct to return correct day and month from data\n  function getMyDay(day) {\n    const date1 = new Date(day);\n    const dayOfWeekIndex = date1.getDay();\n    const dayNames = [\"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\", \"Sund\"];\n    return dayNames[dayOfWeekIndex];\n  }\n  function showAdded(i) {\n    const preItemToShow = [...itemToShow, i];\n    setItemToShow(preItemToShow);\n    const newItemShow = itemToShow.filter(item => item !== i);\n    setTimeout(() => {\n      setItemToShow(newItemShow);\n    }, 3500);\n  }\n\n  // useEffect(() => {\n  // }, [itemToShow]);\n  function getMyMonth(month) {\n    const month1 = new Date(month);\n    const dayOfMonthIndex = month1.getMonth();\n    const monthNames = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"Aug\",\n      \"Sept\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ];\n    return monthNames[dayOfMonthIndex];\n  }\n  // add item to dashboard\n  const onAddItemClick = (item, user) => {\n    const newItem = {\n      name: item.res.title,\n      weathers: item,\n      newID: user._id\n    };\n    addItem(newItem);\n  };\n\n  // console.log(weatherData);\n  console.log(initialQuery);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Weather</h1>\n      {user && <div>You are logged in!</div>}\n\n      <div>\n        <input\n          type=\"text\"\n          value={searchTerm}\n          onChange={handleChange}\n          placeholder=\"input city search\"\n          className=\"input-weather\"\n        />\n      </div>\n\n      <h3>Total found: {weatherData.length} </h3>\n      {initialQuery.length > 0 && weatherData.length !== initialQuery.length ? (\n        <img\n          src=\"https://media.giphy.com/media/l31p1SkNXGz3l1nwwu/giphy.gif\"\n          alt=\"loading\"\n          className=\"loading-gif\"\n        />\n      ) : (\n        <div className=\"all-weather-container\">\n          {weatherData.map((item, i) => (\n            <div className=\"each-weather\" key={item.res.woeid}>\n              <div className=\"each-container\">\n                {isAuthenticated === true ? (\n                  <Button\n                    className=\"weather-button weather-save\"\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    onClick={() => {\n                      showAdded(i);\n                      onAddItemClick(item, user);\n                    }}\n                  >\n                    {itemToShow.includes(i) ? \"Saved\" : \"Add\"}\n                  </Button>\n                ) : (\n                  <div>Please login to save cities!</div>\n                )}\n                <br />\n                <h3 className=\"each-weather-title\" variant=\"h3\" component=\"h3\">\n                  {item.res.title}\n                </h3>\n                <h6>{item.res.timezone}</h6>\n                <h6>Time: {item.res.time.slice(11, 16)}</h6>\n                <hr />\n\n                <Carousel interval={0}>\n                  <Carousel.Item>\n                    <h6>Today</h6>\n                    <img\n                      className=\"weather-image\"\n                      src={`https://www.metaweather.com/static/img/weather/${item.res.consolidated_weather[0].weather_state_abbr}.svg`}\n                      alt=\"weather state\"\n                    />\n                    <h6>\n                      {item.res.consolidated_weather[0].weather_state_name}\n                    </h6>\n                    <h6>\n                      {item.res.consolidated_weather[0].the_temp &&\n                        item.res.consolidated_weather[0].the_temp.toFixed(1)}\n                    </h6>\n                    <h6>\n                      Predictability:{\" \"}\n                      {item.res.consolidated_weather[0].predictability &&\n                        item.res.consolidated_weather[0].predictability}\n                      %\n                    </h6>\n                  </Carousel.Item>\n\n                  {item.res.consolidated_weather.map((weather, i) => (\n                    <Carousel.Item className=\"show-more-each\" key={i}>\n                      {i === 0 ? (\n                        <h6>Tomorrow</h6>\n                      ) : (\n                        <h6>\n                          {getMyDay(\n                            item.res.consolidated_weather[i].applicable_date\n                          )}{\" \"}\n                          {parseInt(\n                            item.res.consolidated_weather[\n                              i\n                            ].applicable_date.slice(8, 10)\n                          ) < 10\n                            ? item.res.consolidated_weather[\n                                i\n                              ].applicable_date.slice(9, 10)\n                            : item.res.consolidated_weather[\n                                i\n                              ].applicable_date.slice(8, 10)}{\" \"}\n                          {getMyMonth(\n                            item.res.consolidated_weather[i].applicable_date\n                          )}\n                        </h6>\n                      )}\n                      <img\n                        className=\"weather-image\"\n                        src={`https://www.metaweather.com/static/img/weather/${item.res.consolidated_weather[i].weather_state_abbr}.svg`}\n                        alt=\"weather state\"\n                      />\n                      <h6>\n                        {item.res.consolidated_weather[i].weather_state_name}\n                      </h6>\n                      <h6>\n                        {item.res.consolidated_weather[i].the_temp &&\n                          item.res.consolidated_weather[i].the_temp.toFixed(1)}\n                        C\n                      </h6>\n                      <h6>\n                        Predictability:{\" \"}\n                        {item.res.consolidated_weather[i].predictability &&\n                          item.res.consolidated_weather[i].predictability}\n                        %\n                      </h6>\n                    </Carousel.Item>\n                  ))}\n                </Carousel>\n                {/* {item.showMoreStuff === false ? (\n                <Button\n                  className=\"weather-button\"\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={() => handleShow(item.res.woeid)}\n                >\n                  Show more\n                </Button>\n              ) : (\n                <div>\n                  <hr />\n                  <div className=\"show-more-content\">\n                    {item.res.consolidated_weather.map((weather, i) => (\n                      <div className=\"show-more-each\" key={i}>\n                        {i === 0 ? (\n                          <h6>Tomorrow</h6>\n                        ) : (\n                          <h6>\n                            {getMyDay(\n                              item.res.consolidated_weather[i].applicable_date\n                            )}{\" \"}\n                            {parseInt(\n                              item.res.consolidated_weather[\n                                i\n                              ].applicable_date.slice(8, 10)\n                            ) < 10\n                              ? item.res.consolidated_weather[\n                                  i\n                                ].applicable_date.slice(9, 10)\n                              : item.res.consolidated_weather[\n                                  i\n                                ].applicable_date.slice(8, 10)}{\" \"}\n                            {getMyMonth(\n                              item.res.consolidated_weather[i].applicable_date\n                            )}\n                          </h6>\n                        )}\n                        <img\n                          className=\"weather-image\"\n                          src={`https://www.metaweather.com/static/img/weather/${item.res.consolidated_weather[i].weather_state_abbr}.svg`}\n                          alt=\"weather state\"\n                        />\n                        <h6>\n                          {item.res.consolidated_weather[i].weather_state_name}\n                        </h6>\n                        <h6>\n                          {item.res.consolidated_weather[i].the_temp &&\n                            item.res.consolidated_weather[i].the_temp.toFixed(\n                              1\n                            )}\n                          C\n                        </h6>\n                        <h6>\n                          Predictability:{\" \"}\n                          {item.res.consolidated_weather[i].predictability &&\n                            item.res.consolidated_weather[i].predictability}\n                          %\n                        </h6>\n                      </div>\n                    ))}\n                  </div>\n                  <Button\n                    className=\"weather-button\"\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    onClick={() => handleShow(item.res.woeid)}\n                  >\n                    Show less\n                  </Button>\n                </div>\n              )} */}\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user\n});\nexport default connect(mapStateToProps, { addItem })(WeatherList);\n","import { useState, useEffect } from \"react\";\n\n// Our hook\nexport default function useDebounce(value, delay) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      // Set debouncedValue to value (passed in) after the specified delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Return a cleanup function that will be called every time ...\n      // ... useEffect is re-called. useEffect will only be re-called ...\n      // ... if value changes (see the inputs array below).\n      // This is how we prevent debouncedValue from changing if value is ...\n      // ... changed within the delay period. Timeout gets cleared and restarted.\n      // To put it in context, if the user is typing within our app's ...\n      // ... search box, we don't want the debouncedValue to update until ...\n      // ... they've stopped typing for more than 500ms.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    // Only re-call effect if value changes\n    // You could also add the \"delay\" var to inputs array if you ...\n    // ... need to be able to change that dynamically.\n    [value, delay]\n  );\n\n  return debouncedValue;\n}\n","import React, { Component } from \"react\";\n\nexport default class Nearby extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Nearby cities</h1>\n        <p>See cities nearby to you</p>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { register } from \"../../actions/authActions\";\nimport { withRouter } from \"react-router-dom\";\nclass Register extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    msg: null\n  };\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object,\n    register: PropTypes.func.isRequired\n  };\n  componentDidUpdate(prevProps) {\n    //   see if error props has changed\n    const { error } = this.props;\n    if (error !== prevProps.error) {\n      //   check for register error\n      if (error && error.id === \"REGISTER_FAIL\") {\n        this.setState({ msg: error.msg.msg });\n      } else {\n        this.setState({ msg: null });\n      }\n    }\n  }\n  //   static getDerivedStateFromProps(nextProps) {\n  //     if (nextProps.isAuthenticated) {\n  //       this.props.history.push(\"/\");\n  //     }\n  //   }\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, email, password } = this.state;\n    // create new user\n    const newUser = {\n      name,\n      email,\n      password\n    };\n\n    // attempt to register\n    this.props.register(newUser, this.props.history);\n  };\n  render() {\n    // console.log(this.state.msg);\n\n    return (\n      <div>\n        {/* {this.state.msg ? <div>{this.state.msg}</div> : null} */}\n        <form noValidate onSubmit={this.handleSubmit}>\n          <div className=\"register-container\">\n            <h1>Register</h1>\n            {this.state.msg ? (\n              <span className=\"red-text\">{this.state.msg}</span>\n            ) : null}\n            <TextField\n              required\n              id=\"register-name\"\n              label=\"Name Required\"\n              className=\"my-form\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"name\"\n              onChange={this.handleChange}\n              autoComplete=\"on\"\n            />\n            <TextField\n              required\n              id=\"register-email\"\n              label=\"Email Required\"\n              className=\"my-form\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email\"\n              onChange={this.handleChange}\n              autoComplete=\"on\"\n            />\n            {/* <span className=\"red-text\">{errors.email}</span> */}\n            <TextField\n              required\n              id=\"register-password\"\n              label=\"Password Required\"\n              className=\"my-form\"\n              type=\"password\"\n              autoComplete=\"current-password\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"password\"\n              onChange={this.handleChange}\n            />\n            {/* <span className=\"red-text\">{errors.password}</span> */}\n\n            {/* <span className=\"red-text\">{errors.password2}</span> */}\n            <Button\n              className=\"my-btn\"\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"submit\"\n            >\n              Register\n            </Button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, { register })(withRouter(Register));\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getItems, handleShow, deleteItem } from \"../actions/itemActions\";\nimport { logout } from \"../actions/authActions\";\nimport { Carousel } from \"react-bootstrap\";\nimport { Button } from \"@material-ui/core\";\n\nclass Dashboard extends Component {\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n  componentDidMount() {\n    this.props.getItems();\n  }\n  onLogout = () => {\n    this.props.logout();\n  };\n  onDeleteClick = id => {\n    this.props.deleteItem(id);\n    // console.log(id);\n  };\n  onHandleShow = id => {\n    this.props.handleShow(id);\n    // console.log(id);\n  };\n\n  render() {\n    function getMyDay(day) {\n      const date1 = new Date(day);\n      const dayOfWeekIndex = date1.getDay();\n      const dayNames = [\"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\", \"Sund\"];\n      return dayNames[dayOfWeekIndex];\n    }\n    function getMyMonth(month) {\n      const month1 = new Date(month);\n      const dayOfMonthIndex = month1.getMonth();\n      const monthNames = [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"Aug\",\n        \"Sept\",\n        \"Oct\",\n        \"Nov\",\n        \"Dec\"\n      ];\n      return monthNames[dayOfMonthIndex];\n    }\n    const { items } = this.props.item;\n    const { user } = this.props.auth;\n    const { isAuthenticated } = this.props.auth;\n    // items.map((each, i) => console.log(items[i].showMore));\n\n    return (\n      <div className=\"container\">\n        {isAuthenticated === true ? (\n          <div className=\"dashboard-weather-container\">\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              className=\"logout-button\"\n              onClick={this.onLogout}\n            >\n              Log me out\n            </Button>\n            <h1>Hi {user.name}</h1>\n            <p>This is your dashboard</p>\n            <div className=\"all-weather-container\">\n              {items.map(({ weathers, _id, newID }, i) =>\n                newID === user._id\n                  ? weathers && (\n                      <div className=\"each-weather\" key={_id}>\n                        <div className=\"each-container\">\n                          <Button\n                            className=\"weather-button weather-delete\"\n                            variant=\"outlined\"\n                            color=\"secondary\"\n                            onClick={() => this.onDeleteClick(_id)}\n                          >\n                            Delete from list\n                          </Button>\n                          <br />\n                          <h3 className=\"each-weather-title\">\n                            {weathers[0].res.title && weathers[0].res.title}\n                          </h3>\n                          <h6>Timezone: {weathers[0].res.timezone}</h6>\n                          <h6>Time: {weathers[0].res.time.slice(11, 16)}</h6>\n                          <h6>\n                            Temperature:{\" \"}\n                            {weathers[0].res.consolidated_weather[0].the_temp &&\n                              weathers[0].res.consolidated_weather[0].the_temp.toFixed(\n                                1\n                              )}{\" \"}\n                            degrees celcius\n                          </h6>\n\n                          <Carousel interval={0}>\n                            <Carousel.Item>\n                              <h6>Today</h6>\n                              <img\n                                className=\"weather-image\"\n                                src={`https://www.metaweather.com/static/img/weather/${weathers[0].res.consolidated_weather[0].weather_state_abbr}.svg`}\n                                alt=\"weather state\"\n                              />\n                              <h6>\n                                {\n                                  weathers[0].res.consolidated_weather[0]\n                                    .weather_state_name\n                                }\n                              </h6>\n                              <h6>\n                                {weathers[0].res.consolidated_weather[0]\n                                  .the_temp &&\n                                  weathers[0].res.consolidated_weather[0].the_temp.toFixed(\n                                    1\n                                  )}\n                              </h6>\n                              <h6>\n                                Predictability:{\" \"}\n                                {weathers[0].res.consolidated_weather[0]\n                                  .predictability &&\n                                  weathers[0].res.consolidated_weather[0]\n                                    .predictability}\n                                %\n                              </h6>\n                            </Carousel.Item>\n\n                            {weathers[0].res.consolidated_weather &&\n                              weathers[0].res.consolidated_weather.map(\n                                (weather, i) => (\n                                  <Carousel.Item\n                                    className=\"show-more-each\"\n                                    key={i}\n                                  >\n                                    {i === 0 ? (\n                                      <h6>Tomorrow</h6>\n                                    ) : (\n                                      <h6>\n                                        {getMyDay(weather.applicable_date)}{\" \"}\n                                        {parseInt(\n                                          weather.applicable_date.slice(8, 10)\n                                        ) < 10\n                                          ? weather.applicable_date.slice(9, 10)\n                                          : weather.applicable_date.slice(\n                                              8,\n                                              10\n                                            )}{\" \"}\n                                        {getMyMonth(weather.applicable_date)}\n                                      </h6>\n                                    )}\n                                    <img\n                                      className=\"weather-image\"\n                                      src={`https://www.metaweather.com/static/img/weather/${weather.weather_state_abbr}.svg`}\n                                      alt=\"weather state\"\n                                    />\n                                    <h6>{weather.weather_state_name}</h6>\n                                    <h6>\n                                      {weather.the_temp &&\n                                        weather.the_temp.toFixed(1)}\n                                      C\n                                    </h6>\n                                    <h6>\n                                      Predictability:{\" \"}\n                                      {weather.predictability &&\n                                        weather.predictability}\n                                      %\n                                    </h6>\n                                  </Carousel.Item>\n                                )\n                              )}\n                          </Carousel>\n                        </div>\n                      </div>\n                    )\n                  : null\n              )}\n            </div>\n          </div>\n        ) : (\n          <div>\n            <h1>Hi guest!</h1>\n            <p>This is your dashboard, please login to view</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nDashboard.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  deleteItem: PropTypes.func.isRequired,\n  handleShow: PropTypes.func.isRequired,\n  logout: PropTypes.func.isRequired\n  // item: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  item: state.item,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getItems,\n  deleteItem,\n  handleShow,\n  logout\n})(Dashboard);\n","import {\n  GET_ITEMS,\n  ADD_ITEM,\n  DELETE_ITEM,\n  ITEMS_LOADING,\n  SHOW_MORE\n} from \"../actions/types\";\n\nconst initialState = {\n  items: [\n    {\n      showMore: false\n    }\n  ],\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ITEMS:\n      return {\n        ...state,\n        items: action.payload,\n        loading: false\n      };\n    case DELETE_ITEM:\n      return {\n        ...state,\n        items: state.items.filter(item => item._id !== action.payload)\n      };\n    case ADD_ITEM:\n      return {\n        ...state,\n        items: [action.payload, ...state.items]\n      };\n    case ITEMS_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n\n    case SHOW_MORE:\n      // const { showMore } = state.items;\n\n      return {\n        ...state,\n        items: state.items.map(item => {\n          if (item._id === action.payload)\n            return {\n              ...item,\n              showMore: !item.showMore\n            };\n\n          return item;\n        })\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL\n} from \"../actions/types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  isLoading: false,\n  user: [{ _id: \"2\" }]\n};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case USER_LOADING:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload\n      };\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        ...action.payload, // includes token\n        isAuthenticated: true,\n        isLoading: false\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT_SUCCESS:\n    case REGISTER_FAIL:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport itemReducer from \"./itemReducer\";\nimport errorReducer from \"./errorReducer\";\nimport authReducer from \"./authReducer\";\nexport default combineReducers({\n  item: itemReducer,\n  error: errorReducer,\n  auth: authReducer\n});\n","import { GET_ERRORS, CLEAR_ERRORS } from \"../actions/types\";\n\nconst initialState = {\n  msg: {},\n  status: null,\n  id: null\n};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return {\n        msg: action.payload.msg,\n        status: action.payload.status,\n        id: action.payload.id\n      };\n    case CLEAR_ERRORS:\n      return {\n        msg: {},\n        status: null,\n        id: null\n      };\n    default:\n      return null;\n  }\n}\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/index\";\n\nconst initialState = {};\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(composeEnhancer(applyMiddleware(thunk)))\n);\n\nexport default store;\n","import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { login, loadUser, logout } from \"../../actions/authActions\";\nimport { withRouter } from \"react-router-dom\";\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    msg: null\n  };\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object,\n    login: PropTypes.func.isRequired,\n    loadUser: PropTypes.func.isRequired\n  };\n  onLogout = () => {\n    this.props.logout();\n  };\n  componentDidUpdate(prevProps) {\n    //   see if error props has changed\n    const { error } = this.props;\n    if (error !== prevProps.error) {\n      //   check for register error\n      if (error && error.id === \"LOGIN_FAIL\") {\n        this.setState({ msg: error.msg.msg });\n      } else {\n        this.setState({ msg: null });\n      }\n    }\n  }\n  // static getDerivedStateFromProps(nextProps) {\n  //   if (nextProps.isAuthenticated) {\n  //     this.props.history.push(\"/\");\n  //   } else return null;\n  // }\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { email, password } = this.state;\n    const user = {\n      email,\n      password\n    };\n    // attempt to login\n    this.props.login(user, this.props.history);\n    // this.props.history.push(\"/\");\n    this.props.loadUser();\n  };\n  render() {\n    // console.log(this.state.msg);\n    const { user } = this.props.auth;\n\n    return (\n      <div>\n        {this.props.isAuthenticated ? (\n          <div>\n            <h1>Hi {user.name}, you are logged in!</h1>\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              className=\"logout-button\"\n              onClick={this.onLogout}\n            >\n              Log me out\n            </Button>\n          </div>\n        ) : (\n          <div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"register-container\">\n                <h1>Login</h1>\n                {this.state.msg ? (\n                  <span className=\"red-text\">{this.state.msg}</span>\n                ) : null}\n\n                <TextField\n                  required\n                  id=\"register-email\"\n                  label=\"Email Required\"\n                  className=\"my-form\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"email\"\n                  onChange={this.handleChange}\n                  autoComplete=\"on\"\n                />\n                {/* <span className=\"red-text\">{errors.email}</span> */}\n                <TextField\n                  required\n                  id=\"register-password\"\n                  label=\"Password Required\"\n                  className=\"my-form\"\n                  type=\"password\"\n                  autoComplete=\"current-password\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"password\"\n                  onChange={this.handleChange}\n                />\n                {/* <span className=\"red-text\">{errors.password}</span> */}\n\n                {/* <span className=\"red-text\">{errors.password2}</span> */}\n                <Button\n                  className=\"my-btn\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"submit\"\n                >\n                  Login\n                </Button>\n              </div>\n            </form>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { login, loadUser, logout })(\n  withRouter(Login)\n);\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport WeatherSearch from \"./components/WeatherSearch\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  useLocation,\n  useHistory\n} from \"react-router-dom\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\n\nimport CloudIcon from \"@material-ui/icons/Cloud\";\nimport AccessibilityIcon from \"@material-ui/icons/Accessibility\";\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\nimport Nearby from \"../src/components/Nearby\";\nimport Register from \"./components/auth/Register\";\nimport { Provider } from \"react-redux\";\nimport Dashboard from \"../src/components/Dashboard\";\nimport store from \"./store\";\nimport { loadUser } from \"./actions/authActions\";\nimport Login from \"../src/components/auth/Login\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  const [value, setValue] = React.useState(0);\n\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n\n  const location = useLocation();\n  const history = useHistory();\n  console.log(location);\n  console.log(history);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"app-container\">\n          <BottomNavigation\n            value={value}\n            onChange={(event, newValue) => {\n              setValue(newValue);\n            }}\n            showLabels\n            className=\"navbar\"\n          >\n            <BottomNavigationAction\n              component={Link}\n              to=\"/\"\n              value=\"\"\n              label=\"Saved Cities\"\n              icon={<FavoriteIcon />}\n            />\n            <BottomNavigationAction\n              component={Link}\n              value=\"search\"\n              to=\"/search\"\n              label=\"Weather Search\"\n              icon={<CloudIcon />}\n            />\n\n            <BottomNavigationAction\n              component={Link}\n              to=\"/nearby\"\n              value=\"nearby\"\n              label=\"Nearby\"\n              icon={<LocationOnIcon />}\n            />\n            <BottomNavigationAction\n              component={Link}\n              to=\"/login\"\n              value=\"login\"\n              label=\"Login\"\n              icon={<AccessibilityIcon />}\n            />\n\n            <BottomNavigationAction\n              component={Link}\n              to=\"/register\"\n              value=\"register\"\n              label=\"Register\"\n              icon={<VpnKeyIcon />}\n            />\n          </BottomNavigation>\n          {/* <Switch> */}\n          <Route path=\"/search\" component={WeatherSearch} />\n          <Route path=\"/nearby\" component={Nearby} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/\" exact component={Dashboard} />\n          {/* </Switch> */}\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}