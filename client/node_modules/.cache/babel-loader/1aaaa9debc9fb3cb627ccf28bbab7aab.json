{"ast":null,"code":"var _jsxFileName = \"/Users/katie/Desktop/Brandon projects/weather_app/client/src/components/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getItems, handleShow, deleteItem } from \"../actions/itemActions\";\nimport { logout } from \"../actions/authActions\";\nimport { Carousel } from \"react-bootstrap\";\nimport { Button } from \"@material-ui/core\";\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onLogoutClick = e => {\n      e.preventDefault();\n      this.props.logoutUser();\n    };\n\n    this.onLogout = () => {\n      this.props.logout();\n    };\n\n    this.onDeleteClick = id => {\n      this.props.deleteItem(id); // console.log(id);\n    };\n\n    this.onHandleShow = id => {\n      this.props.handleShow(id); // console.log(id);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getItems();\n  }\n\n  render() {\n    function getMyDay(day) {\n      const date1 = new Date(day);\n      const dayOfWeekIndex = date1.getDay();\n      const dayNames = [\"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\", \"Sund\"];\n      return dayNames[dayOfWeekIndex];\n    }\n\n    function getMyMonth(month) {\n      const month1 = new Date(month);\n      const dayOfMonthIndex = month1.getMonth();\n      const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n      return monthNames[dayOfMonthIndex];\n    }\n\n    const items = this.props.item.items;\n    const user = this.props.auth.user;\n    const isAuthenticated = this.props.auth.isAuthenticated; // items.map((each, i) => console.log(items[i].showMore));\n\n    const userItems = items && items.filter(item => item.newID === user._id);\n    console.log(userItems);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, isAuthenticated === true ? React.createElement(\"div\", {\n      className: \"dashboard-weather-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      className: \"logout-button\",\n      onClick: this.onLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Log me out\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Hi \", user.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"This is your dashboard\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, userItems && userItems === 0 ? \"Search and add cities to your dashboard!\" : null), React.createElement(\"div\", {\n      className: \"all-weather-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, items.map(({\n      weathers,\n      _id,\n      newID\n    }, i) => newID === user._id ? weathers && React.createElement(\"div\", {\n      className: \"each-weather\",\n      key: _id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"each-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"weather-button weather-delete\",\n      variant: \"outlined\",\n      color: \"secondary\",\n      onClick: () => this.onDeleteClick(_id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Delete from list\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"each-weather-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, weathers[0].res.title && weathers[0].res.title), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Timezone: \", weathers[0].res.timezone), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Time: \", weathers[0].res.time.slice(11, 16)), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Temperature:\", \" \", weathers[0].res.consolidated_weather[0].the_temp && weathers[0].res.consolidated_weather[0].the_temp.toFixed(1), \" \", \"degrees celcius\"), React.createElement(Carousel, {\n      interval: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Carousel.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Today\"), React.createElement(\"img\", {\n      className: \"weather-image\",\n      src: `https://www.metaweather.com/static/img/weather/${weathers[0].res.consolidated_weather[0].weather_state_abbr}.svg`,\n      alt: \"weather state\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, weathers[0].res.consolidated_weather[0].weather_state_name), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, weathers[0].res.consolidated_weather[0].the_temp && weathers[0].res.consolidated_weather[0].the_temp.toFixed(1)), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Predictability:\", \" \", weathers[0].res.consolidated_weather[0].predictability && weathers[0].res.consolidated_weather[0].predictability, \"%\")), weathers[0].res.consolidated_weather && weathers[0].res.consolidated_weather.map((weather, i) => React.createElement(Carousel.Item, {\n      className: \"show-more-each\",\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, i === 0 ? React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Tomorrow\") : React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, getMyDay(weather.applicable_date), \" \", parseInt(weather.applicable_date.slice(8, 10)) < 10 ? weather.applicable_date.slice(9, 10) : weather.applicable_date.slice(8, 10), \" \", getMyMonth(weather.applicable_date)), React.createElement(\"img\", {\n      className: \"weather-image\",\n      src: `https://www.metaweather.com/static/img/weather/${weather.weather_state_abbr}.svg`,\n      alt: \"weather state\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, weather.weather_state_name), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, weather.the_temp && weather.the_temp.toFixed(1), \"C\"), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Predictability:\", \" \", weather.predictability && weather.predictability, \"%\")))))) : null))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Hi guest!\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"This is your dashboard, please login to view\")));\n  }\n\n}\n\nDashboard.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  deleteItem: PropTypes.func.isRequired,\n  handleShow: PropTypes.func.isRequired,\n  logout: PropTypes.func.isRequired // item: PropTypes.object.isRequired\n\n};\n\nconst mapStateToProps = state => ({\n  item: state.item,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getItems,\n  deleteItem,\n  handleShow,\n  logout\n})(Dashboard);","map":{"version":3,"sources":["/Users/katie/Desktop/Brandon projects/weather_app/client/src/components/Dashboard.js"],"names":["React","Component","PropTypes","connect","getItems","handleShow","deleteItem","logout","Carousel","Button","Dashboard","onLogoutClick","e","preventDefault","props","logoutUser","onLogout","onDeleteClick","id","onHandleShow","componentDidMount","render","getMyDay","day","date1","Date","dayOfWeekIndex","getDay","dayNames","getMyMonth","month","month1","dayOfMonthIndex","getMonth","monthNames","items","item","user","auth","isAuthenticated","userItems","filter","newID","_id","console","log","name","map","weathers","i","res","title","timezone","time","slice","consolidated_weather","the_temp","toFixed","weather_state_abbr","weather_state_name","predictability","weather","applicable_date","parseInt","propTypes","func","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,UAA/B,QAAiD,wBAAjD;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,MAAT,QAAuB,mBAAvB;;AAEA,MAAMC,SAAN,SAAwBT,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAChCU,aADgC,GAChBC,CAAC,IAAI;AACnBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,KAAL,CAAWC,UAAX;AACD,KAJ+B;;AAAA,SAQhCC,QARgC,GAQrB,MAAM;AACf,WAAKF,KAAL,CAAWP,MAAX;AACD,KAV+B;;AAAA,SAWhCU,aAXgC,GAWhBC,EAAE,IAAI;AACpB,WAAKJ,KAAL,CAAWR,UAAX,CAAsBY,EAAtB,EADoB,CAEpB;AACD,KAd+B;;AAAA,SAehCC,YAfgC,GAejBD,EAAE,IAAI;AACnB,WAAKJ,KAAL,CAAWT,UAAX,CAAsBa,EAAtB,EADmB,CAEnB;AACD,KAlB+B;AAAA;;AAKhCE,EAAAA,iBAAiB,GAAG;AAClB,SAAKN,KAAL,CAAWV,QAAX;AACD;;AAaDiB,EAAAA,MAAM,GAAG;AACP,aAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACrB,YAAMC,KAAK,GAAG,IAAIC,IAAJ,CAASF,GAAT,CAAd;AACA,YAAMG,cAAc,GAAGF,KAAK,CAACG,MAAN,EAAvB;AACA,YAAMC,QAAQ,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,MAAtB,EAA8B,KAA9B,EAAqC,KAArC,EAA4C,MAA5C,CAAjB;AACA,aAAOA,QAAQ,CAACF,cAAD,CAAf;AACD;;AACD,aAASG,UAAT,CAAoBC,KAApB,EAA2B;AACzB,YAAMC,MAAM,GAAG,IAAIN,IAAJ,CAASK,KAAT,CAAf;AACA,YAAME,eAAe,GAAGD,MAAM,CAACE,QAAP,EAAxB;AACA,YAAMC,UAAU,GAAG,CACjB,KADiB,EAEjB,KAFiB,EAGjB,KAHiB,EAIjB,KAJiB,EAKjB,KALiB,EAMjB,MANiB,EAOjB,MAPiB,EAQjB,KARiB,EASjB,MATiB,EAUjB,KAViB,EAWjB,KAXiB,EAYjB,KAZiB,CAAnB;AAcA,aAAOA,UAAU,CAACF,eAAD,CAAjB;AACD;;AAzBM,UA0BCG,KA1BD,GA0BW,KAAKrB,KAAL,CAAWsB,IA1BtB,CA0BCD,KA1BD;AAAA,UA2BCE,IA3BD,GA2BU,KAAKvB,KAAL,CAAWwB,IA3BrB,CA2BCD,IA3BD;AAAA,UA4BCE,eA5BD,GA4BqB,KAAKzB,KAAL,CAAWwB,IA5BhC,CA4BCC,eA5BD,EA6BP;;AACA,UAAMC,SAAS,GAAGL,KAAK,IAAIA,KAAK,CAACM,MAAN,CAAaL,IAAI,IAAIA,IAAI,CAACM,KAAL,KAAeL,IAAI,CAACM,GAAzC,CAA3B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,eAAe,KAAK,IAApB,GACC;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,SAAS,EAAC,eAHZ;AAIE,MAAA,OAAO,EAAE,KAAKvB,QAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAQqB,IAAI,CAACS,IAAb,CATF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAVF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGN,SAAS,IAAIA,SAAS,KAAK,CAA3B,GACG,0CADH,GAEG,IAHN,CAXF,EAgBE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,KAAK,CAACY,GAAN,CAAU,CAAC;AAAEC,MAAAA,QAAF;AAAYL,MAAAA,GAAZ;AAAiBD,MAAAA;AAAjB,KAAD,EAA2BO,CAA3B,KACTP,KAAK,KAAKL,IAAI,CAACM,GAAf,GACIK,QAAQ,IACN;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,GAAG,EAAEL,GAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAC,+BADZ;AAEE,MAAA,OAAO,EAAC,UAFV;AAGE,MAAA,KAAK,EAAC,WAHR;AAIE,MAAA,OAAO,EAAE,MAAM,KAAK1B,aAAL,CAAmB0B,GAAnB,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAUE;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGK,QAAQ,CAAC,CAAD,CAAR,CAAYE,GAAZ,CAAgBC,KAAhB,IAAyBH,QAAQ,CAAC,CAAD,CAAR,CAAYE,GAAZ,CAAgBC,KAD5C,CAVF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAeH,QAAQ,CAAC,CAAD,CAAR,CAAYE,GAAZ,CAAgBE,QAA/B,CAbF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAWJ,QAAQ,CAAC,CAAD,CAAR,CAAYE,GAAZ,CAAgBG,IAAhB,CAAqBC,KAArB,CAA2B,EAA3B,EAA+B,EAA/B,CAAX,CAdF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACe,GADf,EAEGN,QAAQ,CAAC,CAAD,CAAR,CAAYE,GAAZ,CAAgBK,oBAAhB,CAAqC,CAArC,EAAwCC,QAAxC,IACCR,QAAQ,CAAC,CAAD,CAAR,CAAYE,GAAZ,CAAgBK,oBAAhB,CAAqC,CAArC,EAAwCC,QAAxC,CAAiDC,OAAjD,CACE,CADF,CAHJ,EAKO,GALP,oBAfF,EAwBE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,GAAG,EAAG,kDAAiDT,QAAQ,CAAC,CAAD,CAAR,CAAYE,GAAZ,CAAgBK,oBAAhB,CAAqC,CAArC,EAAwCG,kBAAmB,MAFpH;AAGE,MAAA,GAAG,EAAC,eAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIV,QAAQ,CAAC,CAAD,CAAR,CAAYE,GAAZ,CAAgBK,oBAAhB,CAAqC,CAArC,EACGI,kBAHP,CAPF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGX,QAAQ,CAAC,CAAD,CAAR,CAAYE,GAAZ,CAAgBK,oBAAhB,CAAqC,CAArC,EACEC,QADF,IAECR,QAAQ,CAAC,CAAD,CAAR,CAAYE,GAAZ,CAAgBK,oBAAhB,CAAqC,CAArC,EAAwCC,QAAxC,CAAiDC,OAAjD,CACE,CADF,CAHJ,CAbF,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACkB,GADlB,EAEGT,QAAQ,CAAC,CAAD,CAAR,CAAYE,GAAZ,CAAgBK,oBAAhB,CAAqC,CAArC,EACEK,cADF,IAECZ,QAAQ,CAAC,CAAD,CAAR,CAAYE,GAAZ,CAAgBK,oBAAhB,CAAqC,CAArC,EACGK,cALP,MApBF,CADF,EA+BGZ,QAAQ,CAAC,CAAD,CAAR,CAAYE,GAAZ,CAAgBK,oBAAhB,IACCP,QAAQ,CAAC,CAAD,CAAR,CAAYE,GAAZ,CAAgBK,oBAAhB,CAAqCR,GAArC,CACE,CAACc,OAAD,EAAUZ,CAAV,KACE,oBAAC,QAAD,CAAU,IAAV;AACE,MAAA,SAAS,EAAC,gBADZ;AAEE,MAAA,GAAG,EAAEA,CAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGA,CAAC,KAAK,CAAN,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,GAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG3B,QAAQ,CAACuC,OAAO,CAACC,eAAT,CADX,EACsC,GADtC,EAEGC,QAAQ,CACPF,OAAO,CAACC,eAAR,CAAwBR,KAAxB,CAA8B,CAA9B,EAAiC,EAAjC,CADO,CAAR,GAEG,EAFH,GAGGO,OAAO,CAACC,eAAR,CAAwBR,KAAxB,CAA8B,CAA9B,EAAiC,EAAjC,CAHH,GAIGO,OAAO,CAACC,eAAR,CAAwBR,KAAxB,CACE,CADF,EAEE,EAFF,CANN,EASS,GATT,EAUGzB,UAAU,CAACgC,OAAO,CAACC,eAAT,CAVb,CAPJ,EAoBE;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,GAAG,EAAG,kDAAiDD,OAAO,CAACH,kBAAmB,MAFpF;AAGE,MAAA,GAAG,EAAC,eAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBF,EAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKG,OAAO,CAACF,kBAAb,CAzBF,EA0BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGE,OAAO,CAACL,QAAR,IACCK,OAAO,CAACL,QAAR,CAAiBC,OAAjB,CAAyB,CAAzB,CAFJ,MA1BF,EA+BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACkB,GADlB,EAEGI,OAAO,CAACD,cAAR,IACCC,OAAO,CAACD,cAHZ,MA/BF,CAFJ,CAhCJ,CAxBF,CADF,CAFN,GAyGI,IA1GL,CADH,CAhBF,CADD,GAiIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAFF,CAlIJ,CADF;AA0ID;;AA/L+B;;AAiMlClD,SAAS,CAACsD,SAAV,GAAsB;AACpB5D,EAAAA,QAAQ,EAAEF,SAAS,CAAC+D,IAAV,CAAeC,UADL;AAEpB5D,EAAAA,UAAU,EAAEJ,SAAS,CAAC+D,IAAV,CAAeC,UAFP;AAGpB7D,EAAAA,UAAU,EAAEH,SAAS,CAAC+D,IAAV,CAAeC,UAHP;AAIpB3D,EAAAA,MAAM,EAAEL,SAAS,CAAC+D,IAAV,CAAeC,UAJH,CAKpB;;AALoB,CAAtB;;AAQA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChChC,EAAAA,IAAI,EAAEgC,KAAK,CAAChC,IADoB;AAEhCE,EAAAA,IAAI,EAAE8B,KAAK,CAAC9B;AAFoB,CAAL,CAA7B;;AAKA,eAAenC,OAAO,CAACgE,eAAD,EAAkB;AACtC/D,EAAAA,QADsC;AAEtCE,EAAAA,UAFsC;AAGtCD,EAAAA,UAHsC;AAItCE,EAAAA;AAJsC,CAAlB,CAAP,CAKZG,SALY,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getItems, handleShow, deleteItem } from \"../actions/itemActions\";\nimport { logout } from \"../actions/authActions\";\nimport { Carousel } from \"react-bootstrap\";\nimport { Button } from \"@material-ui/core\";\n\nclass Dashboard extends Component {\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n  componentDidMount() {\n    this.props.getItems();\n  }\n  onLogout = () => {\n    this.props.logout();\n  };\n  onDeleteClick = id => {\n    this.props.deleteItem(id);\n    // console.log(id);\n  };\n  onHandleShow = id => {\n    this.props.handleShow(id);\n    // console.log(id);\n  };\n\n  render() {\n    function getMyDay(day) {\n      const date1 = new Date(day);\n      const dayOfWeekIndex = date1.getDay();\n      const dayNames = [\"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\", \"Sund\"];\n      return dayNames[dayOfWeekIndex];\n    }\n    function getMyMonth(month) {\n      const month1 = new Date(month);\n      const dayOfMonthIndex = month1.getMonth();\n      const monthNames = [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"Aug\",\n        \"Sept\",\n        \"Oct\",\n        \"Nov\",\n        \"Dec\"\n      ];\n      return monthNames[dayOfMonthIndex];\n    }\n    const { items } = this.props.item;\n    const { user } = this.props.auth;\n    const { isAuthenticated } = this.props.auth;\n    // items.map((each, i) => console.log(items[i].showMore));\n    const userItems = items && items.filter(item => item.newID === user._id);\n    console.log(userItems);\n\n    return (\n      <div className=\"container\">\n        {isAuthenticated === true ? (\n          <div className=\"dashboard-weather-container\">\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              className=\"logout-button\"\n              onClick={this.onLogout}\n            >\n              Log me out\n            </Button>\n            <h1>Hi {user.name}</h1>\n            <p>This is your dashboard</p>\n            <p>\n              {userItems && userItems === 0\n                ? \"Search and add cities to your dashboard!\"\n                : null}\n            </p>\n            <div className=\"all-weather-container\">\n              {items.map(({ weathers, _id, newID }, i) =>\n                newID === user._id\n                  ? weathers && (\n                      <div className=\"each-weather\" key={_id}>\n                        <div className=\"each-container\">\n                          <Button\n                            className=\"weather-button weather-delete\"\n                            variant=\"outlined\"\n                            color=\"secondary\"\n                            onClick={() => this.onDeleteClick(_id)}\n                          >\n                            Delete from list\n                          </Button>\n                          <br />\n                          <h3 className=\"each-weather-title\">\n                            {weathers[0].res.title && weathers[0].res.title}\n                          </h3>\n                          <h6>Timezone: {weathers[0].res.timezone}</h6>\n                          <h6>Time: {weathers[0].res.time.slice(11, 16)}</h6>\n                          <h6>\n                            Temperature:{\" \"}\n                            {weathers[0].res.consolidated_weather[0].the_temp &&\n                              weathers[0].res.consolidated_weather[0].the_temp.toFixed(\n                                1\n                              )}{\" \"}\n                            degrees celcius\n                          </h6>\n\n                          <Carousel interval={0}>\n                            <Carousel.Item>\n                              <h6>Today</h6>\n                              <img\n                                className=\"weather-image\"\n                                src={`https://www.metaweather.com/static/img/weather/${weathers[0].res.consolidated_weather[0].weather_state_abbr}.svg`}\n                                alt=\"weather state\"\n                              />\n                              <h6>\n                                {\n                                  weathers[0].res.consolidated_weather[0]\n                                    .weather_state_name\n                                }\n                              </h6>\n                              <h6>\n                                {weathers[0].res.consolidated_weather[0]\n                                  .the_temp &&\n                                  weathers[0].res.consolidated_weather[0].the_temp.toFixed(\n                                    1\n                                  )}\n                              </h6>\n                              <h6>\n                                Predictability:{\" \"}\n                                {weathers[0].res.consolidated_weather[0]\n                                  .predictability &&\n                                  weathers[0].res.consolidated_weather[0]\n                                    .predictability}\n                                %\n                              </h6>\n                            </Carousel.Item>\n\n                            {weathers[0].res.consolidated_weather &&\n                              weathers[0].res.consolidated_weather.map(\n                                (weather, i) => (\n                                  <Carousel.Item\n                                    className=\"show-more-each\"\n                                    key={i}\n                                  >\n                                    {i === 0 ? (\n                                      <h6>Tomorrow</h6>\n                                    ) : (\n                                      <h6>\n                                        {getMyDay(weather.applicable_date)}{\" \"}\n                                        {parseInt(\n                                          weather.applicable_date.slice(8, 10)\n                                        ) < 10\n                                          ? weather.applicable_date.slice(9, 10)\n                                          : weather.applicable_date.slice(\n                                              8,\n                                              10\n                                            )}{\" \"}\n                                        {getMyMonth(weather.applicable_date)}\n                                      </h6>\n                                    )}\n                                    <img\n                                      className=\"weather-image\"\n                                      src={`https://www.metaweather.com/static/img/weather/${weather.weather_state_abbr}.svg`}\n                                      alt=\"weather state\"\n                                    />\n                                    <h6>{weather.weather_state_name}</h6>\n                                    <h6>\n                                      {weather.the_temp &&\n                                        weather.the_temp.toFixed(1)}\n                                      C\n                                    </h6>\n                                    <h6>\n                                      Predictability:{\" \"}\n                                      {weather.predictability &&\n                                        weather.predictability}\n                                      %\n                                    </h6>\n                                  </Carousel.Item>\n                                )\n                              )}\n                          </Carousel>\n                        </div>\n                      </div>\n                    )\n                  : null\n              )}\n            </div>\n          </div>\n        ) : (\n          <div>\n            <h1>Hi guest!</h1>\n            <p>This is your dashboard, please login to view</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nDashboard.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  deleteItem: PropTypes.func.isRequired,\n  handleShow: PropTypes.func.isRequired,\n  logout: PropTypes.func.isRequired\n  // item: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  item: state.item,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getItems,\n  deleteItem,\n  handleShow,\n  logout\n})(Dashboard);\n"]},"metadata":{},"sourceType":"module"}