{"ast":null,"code":"var _jsxFileName = \"/Users/katie/Desktop/Brandon projects/weather_app/client/src/components/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getItems, handleShow, deleteItem } from \"../actions/itemActions\";\nimport { logout } from \"../actions/authActions\";\nimport { Paper } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onLogoutClick = e => {\n      e.preventDefault();\n      this.props.logoutUser();\n    };\n\n    this.onLogout = () => {\n      this.props.logout();\n    };\n\n    this.onDeleteClick = id => {\n      this.props.deleteItem(id);\n      console.log(id);\n    };\n\n    this.onHandleShow = id => {\n      this.props.handleShow(id);\n      console.log(id);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getItems();\n  }\n\n  render() {\n    function getMyDay(day) {\n      const date1 = new Date(day);\n      const dayOfWeekIndex = date1.getDay();\n      const dayNames = [\"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\", \"Sund\"];\n      return dayNames[dayOfWeekIndex];\n    }\n\n    function getMyMonth(month) {\n      const month1 = new Date(month);\n      const dayOfMonthIndex = month1.getMonth();\n      const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n      return monthNames[dayOfMonthIndex];\n    }\n\n    const items = this.props.item.items;\n    const user = this.props.auth.user;\n    const isAuthenticated = this.props.auth.isAuthenticated; // items.map((each, i) => console.log(items[i].showMore));\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, isAuthenticated === true ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.onLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Log me out\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Hi \", user.name), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"this is your dashboard\"), items.map(({\n      weathers,\n      _id,\n      newID\n    }, i) => newID === user._id ? weathers && React.createElement(Paper, {\n      className: \"each-weather\",\n      key: _id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"weather-button\",\n      variant: \"outlined\",\n      color: \"secondary\",\n      onClick: () => this.onDeleteClick(_id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Delete from list\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"each-weather-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, weathers[0].res.title && weathers[0].res.title), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Timezone: \", weathers[0].res.timezone), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Time: \", weathers[0].res.time.slice(11, 16)), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Temperature:\", \" \", weathers[0].res.consolidated_weather[0].the_temp && weathers[0].res.consolidated_weather[0].the_temp.toFixed(1), \" \", \"degrees celcius\"), React.createElement(\"img\", {\n      className: \"weather-image\",\n      src: `https://www.metaweather.com/static/img/weather/${weathers[0].res.consolidated_weather[0].weather_state_abbr}.svg`,\n      alt: \"weather state\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Weather Conditions:\", \" \", weathers[0].res.consolidated_weather[0].weather_state_name), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Predictability:\", \" \", weathers[0].res.consolidated_weather[0].predictability && weathers[0].res.consolidated_weather[0].predictability, \"%\"), items[i].showMore === false ? React.createElement(Button, {\n      className: \"weather-button\",\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: () => this.onHandleShow(_id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Show more\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"show-more-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, weathers[0].res.consolidated_weather.map((weather, i) => React.createElement(\"div\", {\n      className: \"show-more-each\",\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, i === 0 ? React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Tomorrow\") : React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, getMyDay(weathers[0].res.consolidated_weather[i].applicable_date), \" \", parseInt(weathers[0].res.consolidated_weather[i].applicable_date.slice(8, 10)) < 10 ? weathers[0].res.consolidated_weather[i].applicable_date.slice(9, 10) : weathers[0].res.consolidated_weather[i].applicable_date.slice(8, 10), \" \", getMyMonth(weathers[0].res.consolidated_weather[i].applicable_date)), React.createElement(\"img\", {\n      className: \"weather-image\",\n      src: `https://www.metaweather.com/static/img/weather/${weathers[0].res.consolidated_weather[i].weather_state_abbr}.svg`,\n      alt: \"weather state\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, weathers[0].res.consolidated_weather[i].weather_state_name), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, weathers[0].res.consolidated_weather[i].the_temp && weathers[0].res.consolidated_weather[i].the_temp.toFixed(1), \"C\"), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Predictability:\", \" \", weathers[0].res.consolidated_weather[i].predictability && weathers[0].res.consolidated_weather[i].predictability, \"%\")))), React.createElement(Button, {\n      className: \"weather-button\",\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: () => this.onHandleShow(_id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Show less\"))) : null)) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"please login \"));\n  }\n\n}\n\nDashboard.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  deleteItem: PropTypes.func.isRequired,\n  handleShow: PropTypes.func.isRequired,\n  logout: PropTypes.func.isRequired // item: PropTypes.object.isRequired\n\n};\n\nconst mapStateToProps = state => ({\n  item: state.item,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getItems,\n  deleteItem,\n  handleShow,\n  logout\n})(Dashboard);","map":{"version":3,"sources":["/Users/katie/Desktop/Brandon projects/weather_app/client/src/components/Dashboard.js"],"names":["React","Component","PropTypes","connect","getItems","handleShow","deleteItem","logout","Paper","Button","Dashboard","onLogoutClick","e","preventDefault","props","logoutUser","onLogout","onDeleteClick","id","console","log","onHandleShow","componentDidMount","render","getMyDay","day","date1","Date","dayOfWeekIndex","getDay","dayNames","getMyMonth","month","month1","dayOfMonthIndex","getMonth","monthNames","items","item","user","auth","isAuthenticated","name","map","weathers","_id","newID","i","res","title","timezone","time","slice","consolidated_weather","the_temp","toFixed","weather_state_abbr","weather_state_name","predictability","showMore","weather","applicable_date","parseInt","propTypes","func","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getItems, handleShow, deleteItem } from \"../actions/itemActions\";\nimport { logout } from \"../actions/authActions\";\nimport { Paper } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\n\nclass Dashboard extends Component {\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n  componentDidMount() {\n    this.props.getItems();\n  }\n  onLogout = () => {\n    this.props.logout();\n  };\n  onDeleteClick = id => {\n    this.props.deleteItem(id);\n    console.log(id);\n  };\n  onHandleShow = id => {\n    this.props.handleShow(id);\n    console.log(id);\n  };\n\n  render() {\n    function getMyDay(day) {\n      const date1 = new Date(day);\n      const dayOfWeekIndex = date1.getDay();\n      const dayNames = [\"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\", \"Sund\"];\n      return dayNames[dayOfWeekIndex];\n    }\n    function getMyMonth(month) {\n      const month1 = new Date(month);\n      const dayOfMonthIndex = month1.getMonth();\n      const monthNames = [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"Aug\",\n        \"Sept\",\n        \"Oct\",\n        \"Nov\",\n        \"Dec\"\n      ];\n      return monthNames[dayOfMonthIndex];\n    }\n    const { items } = this.props.item;\n    const { user } = this.props.auth;\n    const { isAuthenticated } = this.props.auth;\n    // items.map((each, i) => console.log(items[i].showMore));\n\n    return (\n      <div>\n        {isAuthenticated === true ? (\n          <div>\n            <button onClick={this.onLogout}>Log me out</button>\n            <h1>Hi {user.name}</h1>\n            <div>this is your dashboard</div>\n            {items.map(({ weathers, _id, newID }, i) =>\n              newID === user._id\n                ? weathers && (\n                    <Paper className=\"each-weather\" key={_id}>\n                      <Button\n                        className=\"weather-button\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        onClick={() => this.onDeleteClick(_id)}\n                      >\n                        Delete from list\n                      </Button>\n                      <br />\n                      <h3 className=\"each-weather-title\">\n                        {weathers[0].res.title && weathers[0].res.title}\n                      </h3>\n                      <h6>Timezone: {weathers[0].res.timezone}</h6>\n                      <h6>Time: {weathers[0].res.time.slice(11, 16)}</h6>\n                      <h6>\n                        Temperature:{\" \"}\n                        {weathers[0].res.consolidated_weather[0].the_temp &&\n                          weathers[0].res.consolidated_weather[0].the_temp.toFixed(\n                            1\n                          )}{\" \"}\n                        degrees celcius\n                      </h6>\n\n                      <img\n                        className=\"weather-image\"\n                        src={`https://www.metaweather.com/static/img/weather/${weathers[0].res.consolidated_weather[0].weather_state_abbr}.svg`}\n                        alt=\"weather state\"\n                      />\n                      <h6>\n                        Weather Conditions:{\" \"}\n                        {\n                          weathers[0].res.consolidated_weather[0]\n                            .weather_state_name\n                        }\n                      </h6>\n                      <h6>\n                        Predictability:{\" \"}\n                        {weathers[0].res.consolidated_weather[0]\n                          .predictability &&\n                          weathers[0].res.consolidated_weather[0]\n                            .predictability}\n                        %\n                      </h6>\n\n                      {items[i].showMore === false ? (\n                        <Button\n                          className=\"weather-button\"\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => this.onHandleShow(_id)}\n                        >\n                          Show more\n                        </Button>\n                      ) : (\n                        <div>\n                          <hr />\n                          <div className=\"show-more-content\">\n                            {weathers[0].res.consolidated_weather.map(\n                              (weather, i) => (\n                                <div className=\"show-more-each\" key={i}>\n                                  {i === 0 ? (\n                                    <h6>Tomorrow</h6>\n                                  ) : (\n                                    <h6>\n                                      {getMyDay(\n                                        weathers[0].res.consolidated_weather[i]\n                                          .applicable_date\n                                      )}{\" \"}\n                                      {parseInt(\n                                        weathers[0].res.consolidated_weather[\n                                          i\n                                        ].applicable_date.slice(8, 10)\n                                      ) < 10\n                                        ? weathers[0].res.consolidated_weather[\n                                            i\n                                          ].applicable_date.slice(9, 10)\n                                        : weathers[0].res.consolidated_weather[\n                                            i\n                                          ].applicable_date.slice(8, 10)}{\" \"}\n                                      {getMyMonth(\n                                        weathers[0].res.consolidated_weather[i]\n                                          .applicable_date\n                                      )}\n                                    </h6>\n                                  )}\n                                  <img\n                                    className=\"weather-image\"\n                                    src={`https://www.metaweather.com/static/img/weather/${weathers[0].res.consolidated_weather[i].weather_state_abbr}.svg`}\n                                    alt=\"weather state\"\n                                  />\n                                  <h6>\n                                    {\n                                      weathers[0].res.consolidated_weather[i]\n                                        .weather_state_name\n                                    }\n                                  </h6>\n                                  <h6>\n                                    {weathers[0].res.consolidated_weather[i]\n                                      .the_temp &&\n                                      weathers[0].res.consolidated_weather[\n                                        i\n                                      ].the_temp.toFixed(1)}\n                                    C\n                                  </h6>\n                                  <h6>\n                                    Predictability:{\" \"}\n                                    {weathers[0].res.consolidated_weather[i]\n                                      .predictability &&\n                                      weathers[0].res.consolidated_weather[i]\n                                        .predictability}\n                                    %\n                                  </h6>\n                                </div>\n                              )\n                            )}\n                          </div>\n                          <Button\n                            className=\"weather-button\"\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            onClick={() => this.onHandleShow(_id)}\n                          >\n                            Show less\n                          </Button>\n                        </div>\n                      )}\n                    </Paper>\n                  )\n                : null\n            )}\n          </div>\n        ) : (\n          <div>please login </div>\n        )}\n      </div>\n    );\n  }\n}\nDashboard.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  deleteItem: PropTypes.func.isRequired,\n  handleShow: PropTypes.func.isRequired,\n  logout: PropTypes.func.isRequired\n  // item: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  item: state.item,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getItems,\n  deleteItem,\n  handleShow,\n  logout\n})(Dashboard);\n"]},"metadata":{},"sourceType":"module"}