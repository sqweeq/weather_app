{"ast":null,"code":"var _jsxFileName = \"/Users/katie/Desktop/Brandon projects/weather_app/client/src/components/auth/Login.js\";\nimport React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { login, loadUser } from \"../../actions/authActions\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      msg: null\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      const user = {\n        email,\n        password\n      }; // attempt to login\n\n      this.props.login(user, this.history); // this.props.history.push(\"/\");\n      // this.props.loadUser();\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    //   see if error props has changed\n    const error = this.props.error;\n\n    if (error !== prevProps.error) {\n      //   check for register error\n      if (error && error.id === \"LOGIN_FAIL\") {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    }\n  } // static getDerivedStateFromProps(nextProps) {\n  //   if (nextProps.isAuthenticated) {\n  //     this.props.history.push(\"/\");\n  //   } else return null;\n  // }\n\n\n  render() {\n    // console.log(this.state.msg);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"register-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Login page\"), this.state.msg ? React.createElement(\"span\", {\n      className: \"red-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.state.msg) : null, React.createElement(TextField, {\n      required: true,\n      id: \"register-email\",\n      label: \"Email Required\",\n      className: \"my-form\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      name: \"email\",\n      onChange: this.handleChange,\n      autoComplete: \"on\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"register-password\",\n      label: \"Password Required\",\n      className: \"my-form\",\n      type: \"password\",\n      autoComplete: \"current-password\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      name: \"password\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: \"my-btn\",\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Login\"))));\n  }\n\n}\n\nLogin.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object,\n  login: PropTypes.func.isRequired,\n  loadUser: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  login,\n  loadUser\n})(withRouter(Login));","map":{"version":3,"sources":["/Users/katie/Desktop/Brandon projects/weather_app/client/src/components/auth/Login.js"],"names":["React","Component","Button","TextField","connect","PropTypes","login","loadUser","withRouter","Login","state","email","password","msg","handleChange","e","setState","target","name","value","onSubmit","preventDefault","user","props","history","componentDidUpdate","prevProps","error","id","render","propTypes","isAuthenticated","bool","object","func","isRequired","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { login, loadUser } from \"../../actions/authActions\";\nimport { withRouter } from \"react-router-dom\";\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    msg: null\n  };\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object,\n    login: PropTypes.func.isRequired,\n    loadUser: PropTypes.func.isRequired\n  };\n  componentDidUpdate(prevProps) {\n    //   see if error props has changed\n    const { error } = this.props;\n    if (error !== prevProps.error) {\n      //   check for register error\n      if (error && error.id === \"LOGIN_FAIL\") {\n        this.setState({ msg: error.msg.msg });\n      } else {\n        this.setState({ msg: null });\n      }\n    }\n  }\n  // static getDerivedStateFromProps(nextProps) {\n  //   if (nextProps.isAuthenticated) {\n  //     this.props.history.push(\"/\");\n  //   } else return null;\n  // }\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { email, password } = this.state;\n    const user = {\n      email,\n      password\n    };\n    // attempt to login\n    this.props.login(user, this.history);\n    // this.props.history.push(\"/\");\n    // this.props.loadUser();\n  };\n  render() {\n    // console.log(this.state.msg);\n\n    return (\n      <div>\n        {/* {this.state.msg ? <div>{this.state.msg}</div> : null} */}\n        <form noValidate onSubmit={this.onSubmit}>\n          <div className=\"register-container\">\n            <h1>Login page</h1>\n            {this.state.msg ? (\n              <span className=\"red-text\">{this.state.msg}</span>\n            ) : null}\n\n            <TextField\n              required\n              id=\"register-email\"\n              label=\"Email Required\"\n              className=\"my-form\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email\"\n              onChange={this.handleChange}\n              autoComplete=\"on\"\n            />\n            {/* <span className=\"red-text\">{errors.email}</span> */}\n            <TextField\n              required\n              id=\"register-password\"\n              label=\"Password Required\"\n              className=\"my-form\"\n              type=\"password\"\n              autoComplete=\"current-password\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"password\"\n              onChange={this.handleChange}\n            />\n            {/* <span className=\"red-text\">{errors.password}</span> */}\n\n            {/* <span className=\"red-text\">{errors.password2}</span> */}\n            <Button\n              className=\"my-btn\"\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"submit\"\n            >\n              Login\n            </Button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, { login, loadUser })(withRouter(Login));\n"]},"metadata":{},"sourceType":"module"}