{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brandon\\\\Desktop\\\\resume projects\\\\weather_app\\\\client\\\\src\\\\components\\\\Dashboard.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getItems, handleShow, deleteItem } from \"../actions/itemActions\";\nimport { logout } from \"../actions/authActions\";\nimport { Carousel } from \"react-bootstrap\";\nimport { Button } from \"@material-ui/core\";\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onLogoutClick = e => {\n      e.preventDefault();\n      this.props.logoutUser();\n    };\n\n    this.onLogout = () => {\n      this.props.logout();\n    };\n\n    this.onDeleteClick = id => {\n      this.props.deleteItem(id); // console.log(id);\n    };\n\n    this.onHandleShow = id => {\n      this.props.handleShow(id); // console.log(id);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getItems();\n  }\n\n  render() {\n    // convert data from api to days and months\n    function getMyDay(day) {\n      const date1 = new Date(day);\n      const dayOfWeekIndex = date1.getDay();\n      const dayNames = [\"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\", \"Sund\"];\n      return dayNames[dayOfWeekIndex];\n    }\n\n    function getMyMonth(month) {\n      const month1 = new Date(month);\n      const dayOfMonthIndex = month1.getMonth();\n      const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n      return monthNames[dayOfMonthIndex];\n    }\n\n    const {\n      items\n    } = this.props.item;\n    const {\n      user\n    } = this.props.auth;\n    const {\n      isAuthenticated\n    } = this.props.auth; // items.map((each, i) => console.log(items[i].showMore));\n\n    const userItems = items && user && items.filter(item => item.newID === user._id); // console.log(userItems);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, isAuthenticated === true ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard-weather-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      className: \"logout-button\",\n      onClick: this.onLogout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, \"Log me out\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, \"Hi \", user.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, \"This is your dashboard\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, userItems && userItems.length === 0 ? \"Search and add cities to your dashboard!\" : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"all-weather-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, items.map(({\n      weathers,\n      _id,\n      newID\n    }, i) => newID === user._id ? weathers && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"each-weather\",\n      key: _id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"each-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"weather-button weather-delete\",\n      variant: \"outlined\",\n      color: \"secondary\",\n      onClick: () => this.onDeleteClick(_id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 27\n      }\n    }, \"Delete from list\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"each-weather-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 27\n      }\n    }, weathers[0].res.title && weathers[0].res.title), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 27\n      }\n    }, \"Timezone: \", weathers[0].res.timezone), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 27\n      }\n    }, \"Time: \", weathers[0].res.time.slice(11, 16)), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 27\n      }\n    }, \"Temperature:\", \" \", weathers[0].res.consolidated_weather[0].the_temp && weathers[0].res.consolidated_weather[0].the_temp.toFixed(1), \" \", \"degrees celcius\"), /*#__PURE__*/React.createElement(Carousel, {\n      interval: null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Carousel.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 31\n      }\n    }, \"Today\"), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"weather-image\",\n      src: `https://www.metaweather.com/static/img/weather/${weathers[0].res.consolidated_weather[0].weather_state_abbr}.svg`,\n      alt: \"weather state\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 31\n      }\n    }, weathers[0].res.consolidated_weather[0].weather_state_name), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 31\n      }\n    }, weathers[0].res.consolidated_weather[0].the_temp && weathers[0].res.consolidated_weather[0].the_temp.toFixed(1), \"C\"), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 31\n      }\n    }, \"Predictability:\", \" \", weathers[0].res.consolidated_weather[0].predictability && weathers[0].res.consolidated_weather[0].predictability, \"%\")), weathers[0].res.consolidated_weather && weathers[0].res.consolidated_weather.map((weather, i) => /*#__PURE__*/React.createElement(Carousel.Item, {\n      className: \"show-more-each\",\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 35\n      }\n    }, i === 0 ? /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 39\n      }\n    }, \"Tomorrow\") : /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 39\n      }\n    }, getMyDay(weather.applicable_date), \" \", parseInt(weather.applicable_date.slice(8, 10)) < 10 ? weather.applicable_date.slice(9, 10) : weather.applicable_date.slice(8, 10), \" \", getMyMonth(weather.applicable_date)), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"weather-image\",\n      src: `https://www.metaweather.com/static/img/weather/${weather.weather_state_abbr}.svg`,\n      alt: \"weather state\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 37\n      }\n    }, weather.weather_state_name), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 37\n      }\n    }, weather.the_temp && weather.the_temp.toFixed(1), \"C\"), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 37\n      }\n    }, \"Predictability:\", \" \", weather.predictability && weather.predictability, \"%\")))))) : null))) :\n    /*#__PURE__*/\n    // if not logged in\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }\n    }, \"Hi guest!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }\n    }, \"This is your dashboard, please register and login to view\")));\n  }\n\n}\n\nDashboard.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  deleteItem: PropTypes.func.isRequired,\n  handleShow: PropTypes.func.isRequired,\n  logout: PropTypes.func.isRequired // item: PropTypes.object.isRequired\n\n};\n\nconst mapStateToProps = state => ({\n  item: state.item,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getItems,\n  deleteItem,\n  handleShow,\n  logout\n})(Dashboard);","map":{"version":3,"sources":["C:/Users/Brandon/Desktop/resume projects/weather_app/client/src/components/Dashboard.js"],"names":["React","Component","PropTypes","connect","getItems","handleShow","deleteItem","logout","Carousel","Button","Dashboard","onLogoutClick","e","preventDefault","props","logoutUser","onLogout","onDeleteClick","id","onHandleShow","componentDidMount","render","getMyDay","day","date1","Date","dayOfWeekIndex","getDay","dayNames","getMyMonth","month","month1","dayOfMonthIndex","getMonth","monthNames","items","item","user","auth","isAuthenticated","userItems","filter","newID","_id","name","length","map","weathers","i","res","title","timezone","time","slice","consolidated_weather","the_temp","toFixed","weather_state_abbr","weather_state_name","predictability","weather","applicable_date","parseInt","propTypes","func","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getItems, handleShow, deleteItem } from \"../actions/itemActions\";\r\nimport { logout } from \"../actions/authActions\";\r\nimport { Carousel } from \"react-bootstrap\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nclass Dashboard extends Component {\r\n  onLogoutClick = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n  componentDidMount() {\r\n    this.props.getItems();\r\n  }\r\n  onLogout = () => {\r\n    this.props.logout();\r\n  };\r\n  onDeleteClick = id => {\r\n    this.props.deleteItem(id);\r\n    // console.log(id);\r\n  };\r\n  onHandleShow = id => {\r\n    this.props.handleShow(id);\r\n    // console.log(id);\r\n  };\r\n\r\n  render() {\r\n    // convert data from api to days and months\r\n    function getMyDay(day) {\r\n      const date1 = new Date(day);\r\n      const dayOfWeekIndex = date1.getDay();\r\n      const dayNames = [\"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\", \"Sund\"];\r\n      return dayNames[dayOfWeekIndex];\r\n    }\r\n    function getMyMonth(month) {\r\n      const month1 = new Date(month);\r\n      const dayOfMonthIndex = month1.getMonth();\r\n      const monthNames = [\r\n        \"Jan\",\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Apr\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"Aug\",\r\n        \"Sept\",\r\n        \"Oct\",\r\n        \"Nov\",\r\n        \"Dec\"\r\n      ];\r\n      return monthNames[dayOfMonthIndex];\r\n    }\r\n    const { items } = this.props.item;\r\n    const { user } = this.props.auth;\r\n    const { isAuthenticated } = this.props.auth;\r\n    // items.map((each, i) => console.log(items[i].showMore));\r\n    const userItems =\r\n      items && user && items.filter(item => item.newID === user._id);\r\n    // console.log(userItems);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        {/* if logged in */}\r\n        {isAuthenticated === true ? (\r\n          <div className=\"dashboard-weather-container\">\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              className=\"logout-button\"\r\n              onClick={this.onLogout}\r\n            >\r\n              Log me out\r\n            </Button>\r\n            <h1>Hi {user.name}</h1>\r\n            <p>This is your dashboard</p>\r\n            <p>\r\n              {userItems && userItems.length === 0\r\n                ? \"Search and add cities to your dashboard!\"\r\n                : null}\r\n            </p>\r\n            {/* map items */}\r\n            <div className=\"all-weather-container\">\r\n              {items.map(({ weathers, _id, newID }, i) =>\r\n                newID === user._id\r\n                  ? weathers && (\r\n                      <div className=\"each-weather\" key={_id}>\r\n                        <div className=\"each-container\">\r\n                          <Button\r\n                            className=\"weather-button weather-delete\"\r\n                            variant=\"outlined\"\r\n                            color=\"secondary\"\r\n                            onClick={() => this.onDeleteClick(_id)}\r\n                          >\r\n                            Delete from list\r\n                          </Button>\r\n                          <br />\r\n                          <h3 className=\"each-weather-title\">\r\n                            {weathers[0].res.title && weathers[0].res.title}\r\n                          </h3>\r\n                          <h6>Timezone: {weathers[0].res.timezone}</h6>\r\n                          <h6>Time: {weathers[0].res.time.slice(11, 16)}</h6>\r\n                          <h6>\r\n                            Temperature:{\" \"}\r\n                            {weathers[0].res.consolidated_weather[0].the_temp &&\r\n                              weathers[0].res.consolidated_weather[0].the_temp.toFixed(\r\n                                1\r\n                              )}{\" \"}\r\n                            degrees celcius\r\n                          </h6>\r\n                          {/* carousel for weather for days of week */}\r\n                          <Carousel interval={null}>\r\n                            <Carousel.Item>\r\n                              <h6>Today</h6>\r\n                              <img\r\n                                className=\"weather-image\"\r\n                                src={`https://www.metaweather.com/static/img/weather/${weathers[0].res.consolidated_weather[0].weather_state_abbr}.svg`}\r\n                                alt=\"weather state\"\r\n                              />\r\n                              <h6>\r\n                                {\r\n                                  weathers[0].res.consolidated_weather[0]\r\n                                    .weather_state_name\r\n                                }\r\n                              </h6>\r\n                              <h6>\r\n                                {weathers[0].res.consolidated_weather[0]\r\n                                  .the_temp &&\r\n                                  weathers[0].res.consolidated_weather[0].the_temp.toFixed(\r\n                                    1\r\n                                  )}\r\n                                C\r\n                              </h6>\r\n                              <h6>\r\n                                Predictability:{\" \"}\r\n                                {weathers[0].res.consolidated_weather[0]\r\n                                  .predictability &&\r\n                                  weathers[0].res.consolidated_weather[0]\r\n                                    .predictability}\r\n                                %\r\n                              </h6>\r\n                            </Carousel.Item>\r\n                            {/* map over data for days of week */}\r\n                            {weathers[0].res.consolidated_weather &&\r\n                              weathers[0].res.consolidated_weather.map(\r\n                                (weather, i) => (\r\n                                  <Carousel.Item\r\n                                    className=\"show-more-each\"\r\n                                    key={i}\r\n                                  >\r\n                                    {i === 0 ? (\r\n                                      <h6>Tomorrow</h6>\r\n                                    ) : (\r\n                                      <h6>\r\n                                        {getMyDay(weather.applicable_date)}{\" \"}\r\n                                        {parseInt(\r\n                                          weather.applicable_date.slice(8, 10)\r\n                                        ) < 10\r\n                                          ? weather.applicable_date.slice(9, 10)\r\n                                          : weather.applicable_date.slice(\r\n                                              8,\r\n                                              10\r\n                                            )}{\" \"}\r\n                                        {getMyMonth(weather.applicable_date)}\r\n                                      </h6>\r\n                                    )}\r\n                                    <img\r\n                                      className=\"weather-image\"\r\n                                      src={`https://www.metaweather.com/static/img/weather/${weather.weather_state_abbr}.svg`}\r\n                                      alt=\"weather state\"\r\n                                    />\r\n                                    <h6>{weather.weather_state_name}</h6>\r\n                                    <h6>\r\n                                      {weather.the_temp &&\r\n                                        weather.the_temp.toFixed(1)}\r\n                                      C\r\n                                    </h6>\r\n                                    <h6>\r\n                                      Predictability:{\" \"}\r\n                                      {weather.predictability &&\r\n                                        weather.predictability}\r\n                                      %\r\n                                    </h6>\r\n                                  </Carousel.Item>\r\n                                )\r\n                              )}\r\n                          </Carousel>\r\n                        </div>\r\n                      </div>\r\n                    )\r\n                  : null\r\n              )}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          // if not logged in\r\n          <div>\r\n            <h1>Hi guest!</h1>\r\n            <p>This is your dashboard, please register and login to view</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nDashboard.propTypes = {\r\n  getItems: PropTypes.func.isRequired,\r\n  deleteItem: PropTypes.func.isRequired,\r\n  handleShow: PropTypes.func.isRequired,\r\n  logout: PropTypes.func.isRequired\r\n  // item: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  item: state.item,\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getItems,\r\n  deleteItem,\r\n  handleShow,\r\n  logout\r\n})(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}