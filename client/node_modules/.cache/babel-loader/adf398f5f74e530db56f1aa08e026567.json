{"ast":null,"code":"import _toConsumableArray from\"/Users/katie/Desktop/Brandon projects/weather_app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/katie/Desktop/Brandon projects/weather_app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/katie/Desktop/Brandon projects/weather_app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import useDebounce from\"./useDebounce\";import{Button}from\"@material-ui/core\";import{Carousel}from\"react-bootstrap\";import{connect}from\"react-redux\";import{addItem}from\"../actions/itemActions\";var WeatherList=function WeatherList(_ref){var addItem=_ref.addItem,isAuthenticated=_ref.isAuthenticated,user=_ref.user;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),weatherData=_useState2[0],setWeatherData=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),initialQuery=_useState4[0],setInitialQuery=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),searchTerm=_useState6[0],setSearchTerm=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),itemToShow=_useState8[0],setItemToShow=_useState8[1];//debounce the search term\nvar debouncedSearchTerm=useDebounce(searchTerm,700);var handleChange=function handleChange(e){setSearchTerm(e.target.value);};useEffect(function(){if(debouncedSearchTerm){getQuery(debouncedSearchTerm);}else{setInitialQuery([]);}},[debouncedSearchTerm]);// query many cities worldID, only 11 at a time\nfunction getQuery(search){return _regeneratorRuntime.async(function getQuery$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(fetch(\"https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/search/?query=\".concat(search)).then(function(res){return res.json();}).then(function(res){return setInitialQuery(res.slice(0,10));}).catch(function(err){console.error(err);}));case 2:case\"end\":return _context.stop();}}});}// use each worldID to fetch each city weather data\nuseEffect(function(){setWeatherData([]);var showMoreStuff=false;function getWeather(){return _regeneratorRuntime.async(function getWeather$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:Promise.all(initialQuery.map(function(item){fetch(\"https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/\".concat(item.woeid,\"/\")).then(function(res){return res.json();}).then(function(res){return setWeatherData(function(prevArray){return[].concat(_toConsumableArray(prevArray),[{res:res,showMoreStuff:showMoreStuff}]);});}).catch(function(err){console.error(err);});return null;}));case 1:case\"end\":return _context2.stop();}}});}getWeather();},[initialQuery]);// onClick to toggle boolean to show more\n// function handleShow(id) {\n//   const newData = weatherData.map(item => {\n//     if (item.res.woeid === id) {\n//       return {\n//         ...item,\n//         showMoreStuff: !item.showMoreStuff\n//       };\n//     } else return item;\n//   });\n//   setWeatherData(newData);\n// }\n// funct to return correct day and month from data\nfunction getMyDay(day){var date1=new Date(day);var dayOfWeekIndex=date1.getDay();var dayNames=[\"Mon\",\"Tue\",\"Wed\",\"Thur\",\"Fri\",\"Sat\",\"Sund\"];return dayNames[dayOfWeekIndex];}function showAdded(i){var preItemToShow=[].concat(_toConsumableArray(itemToShow),[i]);setItemToShow(preItemToShow);var newItemShow=itemToShow.filter(function(item){return item!==i;});setTimeout(function(){setItemToShow(newItemShow);},3500);}// useEffect(() => {\n// }, [itemToShow]);\nfunction getMyMonth(month){var month1=new Date(month);var dayOfMonthIndex=month1.getMonth();var monthNames=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"June\",\"July\",\"Aug\",\"Sept\",\"Oct\",\"Nov\",\"Dec\"];return monthNames[dayOfMonthIndex];}// add item to dashboard\nvar onAddItemClick=function onAddItemClick(item,user){var newItem={name:item.res.title,weathers:item,newID:user._id};addItem(newItem);};// console.log(weatherData);\nconsole.log(initialQuery);return React.createElement(\"div\",{className:\"container\"},React.createElement(\"h1\",{className:\"title\"},\"Weather\"),user&&React.createElement(\"div\",null,\"You are logged in!\"),React.createElement(\"div\",null,React.createElement(\"input\",{type:\"text\",value:searchTerm,onChange:handleChange,placeholder:\"input city search\",className:\"input-weather\"})),React.createElement(\"h3\",null,\"Total found: \",weatherData.length,\" \"),initialQuery.length>0&&weatherData.length!==initialQuery.length?React.createElement(\"img\",{src:\"https://media.giphy.com/media/l31p1SkNXGz3l1nwwu/giphy.gif\",alt:\"loading\",className:\"loading-gif\"}):React.createElement(\"div\",{className:\"all-weather-container\"},weatherData.map(function(item,i){return React.createElement(\"div\",{className:\"each-weather\",key:item.res.woeid},React.createElement(\"div\",{className:\"each-container\"},isAuthenticated===true?React.createElement(Button,{className:\"weather-button weather-save\",variant:\"outlined\",color:\"secondary\",onClick:function onClick(){showAdded(i);onAddItemClick(item,user);}},itemToShow.includes(i)?\"Saved\":\"Add\"):React.createElement(\"div\",null,\"Please login to save cities!\"),React.createElement(\"br\",null),React.createElement(\"h3\",{className:\"each-weather-title\",variant:\"h3\",component:\"h3\"},item.res.title),React.createElement(\"h6\",null,item.res.timezone),React.createElement(\"h6\",null,\"Time: \",item.res.time.slice(11,16)),React.createElement(\"hr\",null),React.createElement(Carousel,{interval:0},React.createElement(Carousel.Item,null,React.createElement(\"h6\",null,\"Today\"),React.createElement(\"img\",{className:\"weather-image\",src:\"https://www.metaweather.com/static/img/weather/\".concat(item.res.consolidated_weather[0].weather_state_abbr,\".svg\"),alt:\"weather state\"}),React.createElement(\"h6\",null,item.res.consolidated_weather[0].weather_state_name),React.createElement(\"h6\",null,item.res.consolidated_weather[0].the_temp&&item.res.consolidated_weather[0].the_temp.toFixed(1)),React.createElement(\"h6\",null,\"Predictability:\",\" \",item.res.consolidated_weather[0].predictability&&item.res.consolidated_weather[0].predictability,\"%\")),item.res.consolidated_weather.map(function(weather,i){return React.createElement(Carousel.Item,{className:\"show-more-each\",key:i},i===0?React.createElement(\"h6\",null,\"Tomorrow\"):React.createElement(\"h6\",null,getMyDay(item.res.consolidated_weather[i].applicable_date),\" \",parseInt(item.res.consolidated_weather[i].applicable_date.slice(8,10))<10?item.res.consolidated_weather[i].applicable_date.slice(9,10):item.res.consolidated_weather[i].applicable_date.slice(8,10),\" \",getMyMonth(item.res.consolidated_weather[i].applicable_date)),React.createElement(\"img\",{className:\"weather-image\",src:\"https://www.metaweather.com/static/img/weather/\".concat(item.res.consolidated_weather[i].weather_state_abbr,\".svg\"),alt:\"weather state\"}),React.createElement(\"h6\",null,item.res.consolidated_weather[i].weather_state_name),React.createElement(\"h6\",null,item.res.consolidated_weather[i].the_temp&&item.res.consolidated_weather[i].the_temp.toFixed(1),\"C\"),React.createElement(\"h6\",null,\"Predictability:\",\" \",item.res.consolidated_weather[i].predictability&&item.res.consolidated_weather[i].predictability,\"%\"));}))));})));};var mapStateToProps=function mapStateToProps(state){return{isAuthenticated:state.auth.isAuthenticated,user:state.auth.user};};export default connect(mapStateToProps,{addItem:addItem})(WeatherList);","map":{"version":3,"sources":["/Users/katie/Desktop/Brandon projects/weather_app/client/src/components/WeatherSearch.js"],"names":["React","useState","useEffect","useDebounce","Button","Carousel","connect","addItem","WeatherList","isAuthenticated","user","weatherData","setWeatherData","initialQuery","setInitialQuery","searchTerm","setSearchTerm","itemToShow","setItemToShow","debouncedSearchTerm","handleChange","e","target","value","getQuery","search","fetch","then","res","json","slice","catch","err","console","error","showMoreStuff","getWeather","Promise","all","map","item","woeid","prevArray","getMyDay","day","date1","Date","dayOfWeekIndex","getDay","dayNames","showAdded","i","preItemToShow","newItemShow","filter","setTimeout","getMyMonth","month","month1","dayOfMonthIndex","getMonth","monthNames","onAddItemClick","newItem","name","title","weathers","newID","_id","log","length","includes","timezone","time","consolidated_weather","weather_state_abbr","weather_state_name","the_temp","toFixed","predictability","weather","applicable_date","parseInt","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport useDebounce from \"./useDebounce\";\nimport { Button } from \"@material-ui/core\";\nimport { Carousel } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { addItem } from \"../actions/itemActions\";\n\nconst WeatherList = ({ addItem, isAuthenticated, user }) => {\n  const [weatherData, setWeatherData] = useState([]);\n  const [initialQuery, setInitialQuery] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [itemToShow, setItemToShow] = useState([]);\n  //debounce the search term\n  const debouncedSearchTerm = useDebounce(searchTerm, 700);\n  const handleChange = e => {\n    setSearchTerm(e.target.value);\n  };\n  useEffect(() => {\n    if (debouncedSearchTerm) {\n      getQuery(debouncedSearchTerm);\n    } else {\n      setInitialQuery([]);\n    }\n  }, [debouncedSearchTerm]);\n\n  // query many cities worldID, only 11 at a time\n  async function getQuery(search) {\n    await fetch(\n      `https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/search/?query=${search}`\n    )\n      .then(res => res.json())\n      .then(res => setInitialQuery(res.slice(0, 10)))\n      .catch(err => {\n        console.error(err);\n      });\n  }\n\n  // use each worldID to fetch each city weather data\n  useEffect(() => {\n    setWeatherData([]);\n    const showMoreStuff = false;\n    async function getWeather() {\n      Promise.all(\n        initialQuery.map(item => {\n          fetch(\n            `https://cors-anywhere.herokuapp.com/https://www.metaweather.com/api/location/${item.woeid}/`\n          )\n            .then(res => res.json())\n            .then(res =>\n              setWeatherData(prevArray => [\n                ...prevArray,\n                { res, showMoreStuff }\n              ])\n            )\n            .catch(err => {\n              console.error(err);\n            });\n          return null;\n        })\n      );\n    }\n    getWeather();\n  }, [initialQuery]);\n\n  // onClick to toggle boolean to show more\n  // function handleShow(id) {\n  //   const newData = weatherData.map(item => {\n  //     if (item.res.woeid === id) {\n  //       return {\n  //         ...item,\n  //         showMoreStuff: !item.showMoreStuff\n  //       };\n  //     } else return item;\n  //   });\n  //   setWeatherData(newData);\n  // }\n  // funct to return correct day and month from data\n  function getMyDay(day) {\n    const date1 = new Date(day);\n    const dayOfWeekIndex = date1.getDay();\n    const dayNames = [\"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\", \"Sund\"];\n    return dayNames[dayOfWeekIndex];\n  }\n  function showAdded(i) {\n    const preItemToShow = [...itemToShow, i];\n    setItemToShow(preItemToShow);\n    const newItemShow = itemToShow.filter(item => item !== i);\n    setTimeout(() => {\n      setItemToShow(newItemShow);\n    }, 3500);\n  }\n\n  // useEffect(() => {\n  // }, [itemToShow]);\n  function getMyMonth(month) {\n    const month1 = new Date(month);\n    const dayOfMonthIndex = month1.getMonth();\n    const monthNames = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"Aug\",\n      \"Sept\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ];\n    return monthNames[dayOfMonthIndex];\n  }\n  // add item to dashboard\n  const onAddItemClick = (item, user) => {\n    const newItem = {\n      name: item.res.title,\n      weathers: item,\n      newID: user._id\n    };\n    addItem(newItem);\n  };\n\n  // console.log(weatherData);\n  console.log(initialQuery);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Weather</h1>\n      {user && <div>You are logged in!</div>}\n\n      <div>\n        <input\n          type=\"text\"\n          value={searchTerm}\n          onChange={handleChange}\n          placeholder=\"input city search\"\n          className=\"input-weather\"\n        />\n      </div>\n\n      <h3>Total found: {weatherData.length} </h3>\n      {initialQuery.length > 0 && weatherData.length !== initialQuery.length ? (\n        <img\n          src=\"https://media.giphy.com/media/l31p1SkNXGz3l1nwwu/giphy.gif\"\n          alt=\"loading\"\n          className=\"loading-gif\"\n        />\n      ) : (\n        <div className=\"all-weather-container\">\n          {weatherData.map((item, i) => (\n            <div className=\"each-weather\" key={item.res.woeid}>\n              <div className=\"each-container\">\n                {isAuthenticated === true ? (\n                  <Button\n                    className=\"weather-button weather-save\"\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    onClick={() => {\n                      showAdded(i);\n                      onAddItemClick(item, user);\n                    }}\n                  >\n                    {itemToShow.includes(i) ? \"Saved\" : \"Add\"}\n                  </Button>\n                ) : (\n                  <div>Please login to save cities!</div>\n                )}\n                <br />\n                <h3 className=\"each-weather-title\" variant=\"h3\" component=\"h3\">\n                  {item.res.title}\n                </h3>\n                <h6>{item.res.timezone}</h6>\n                <h6>Time: {item.res.time.slice(11, 16)}</h6>\n                <hr />\n\n                <Carousel interval={0}>\n                  <Carousel.Item>\n                    <h6>Today</h6>\n                    <img\n                      className=\"weather-image\"\n                      src={`https://www.metaweather.com/static/img/weather/${item.res.consolidated_weather[0].weather_state_abbr}.svg`}\n                      alt=\"weather state\"\n                    />\n                    <h6>\n                      {item.res.consolidated_weather[0].weather_state_name}\n                    </h6>\n                    <h6>\n                      {item.res.consolidated_weather[0].the_temp &&\n                        item.res.consolidated_weather[0].the_temp.toFixed(1)}\n                    </h6>\n                    <h6>\n                      Predictability:{\" \"}\n                      {item.res.consolidated_weather[0].predictability &&\n                        item.res.consolidated_weather[0].predictability}\n                      %\n                    </h6>\n                  </Carousel.Item>\n\n                  {item.res.consolidated_weather.map((weather, i) => (\n                    <Carousel.Item className=\"show-more-each\" key={i}>\n                      {i === 0 ? (\n                        <h6>Tomorrow</h6>\n                      ) : (\n                        <h6>\n                          {getMyDay(\n                            item.res.consolidated_weather[i].applicable_date\n                          )}{\" \"}\n                          {parseInt(\n                            item.res.consolidated_weather[\n                              i\n                            ].applicable_date.slice(8, 10)\n                          ) < 10\n                            ? item.res.consolidated_weather[\n                                i\n                              ].applicable_date.slice(9, 10)\n                            : item.res.consolidated_weather[\n                                i\n                              ].applicable_date.slice(8, 10)}{\" \"}\n                          {getMyMonth(\n                            item.res.consolidated_weather[i].applicable_date\n                          )}\n                        </h6>\n                      )}\n                      <img\n                        className=\"weather-image\"\n                        src={`https://www.metaweather.com/static/img/weather/${item.res.consolidated_weather[i].weather_state_abbr}.svg`}\n                        alt=\"weather state\"\n                      />\n                      <h6>\n                        {item.res.consolidated_weather[i].weather_state_name}\n                      </h6>\n                      <h6>\n                        {item.res.consolidated_weather[i].the_temp &&\n                          item.res.consolidated_weather[i].the_temp.toFixed(1)}\n                        C\n                      </h6>\n                      <h6>\n                        Predictability:{\" \"}\n                        {item.res.consolidated_weather[i].predictability &&\n                          item.res.consolidated_weather[i].predictability}\n                        %\n                      </h6>\n                    </Carousel.Item>\n                  ))}\n                </Carousel>\n                {/* {item.showMoreStuff === false ? (\n                <Button\n                  className=\"weather-button\"\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={() => handleShow(item.res.woeid)}\n                >\n                  Show more\n                </Button>\n              ) : (\n                <div>\n                  <hr />\n                  <div className=\"show-more-content\">\n                    {item.res.consolidated_weather.map((weather, i) => (\n                      <div className=\"show-more-each\" key={i}>\n                        {i === 0 ? (\n                          <h6>Tomorrow</h6>\n                        ) : (\n                          <h6>\n                            {getMyDay(\n                              item.res.consolidated_weather[i].applicable_date\n                            )}{\" \"}\n                            {parseInt(\n                              item.res.consolidated_weather[\n                                i\n                              ].applicable_date.slice(8, 10)\n                            ) < 10\n                              ? item.res.consolidated_weather[\n                                  i\n                                ].applicable_date.slice(9, 10)\n                              : item.res.consolidated_weather[\n                                  i\n                                ].applicable_date.slice(8, 10)}{\" \"}\n                            {getMyMonth(\n                              item.res.consolidated_weather[i].applicable_date\n                            )}\n                          </h6>\n                        )}\n                        <img\n                          className=\"weather-image\"\n                          src={`https://www.metaweather.com/static/img/weather/${item.res.consolidated_weather[i].weather_state_abbr}.svg`}\n                          alt=\"weather state\"\n                        />\n                        <h6>\n                          {item.res.consolidated_weather[i].weather_state_name}\n                        </h6>\n                        <h6>\n                          {item.res.consolidated_weather[i].the_temp &&\n                            item.res.consolidated_weather[i].the_temp.toFixed(\n                              1\n                            )}\n                          C\n                        </h6>\n                        <h6>\n                          Predictability:{\" \"}\n                          {item.res.consolidated_weather[i].predictability &&\n                            item.res.consolidated_weather[i].predictability}\n                          %\n                        </h6>\n                      </div>\n                    ))}\n                  </div>\n                  <Button\n                    className=\"weather-button\"\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    onClick={() => handleShow(item.res.woeid)}\n                  >\n                    Show less\n                  </Button>\n                </div>\n              )} */}\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user\n});\nexport default connect(mapStateToProps, { addItem })(WeatherList);\n"]},"metadata":{},"sourceType":"module"}