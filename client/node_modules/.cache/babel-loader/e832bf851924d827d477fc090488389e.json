{"ast":null,"code":"import _defineProperty from\"/Users/katie/Desktop/Brandon projects/weather_app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/katie/Desktop/Brandon projects/weather_app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/katie/Desktop/Brandon projects/weather_app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/katie/Desktop/Brandon projects/weather_app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/katie/Desktop/Brandon projects/weather_app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/katie/Desktop/Brandon projects/weather_app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import Button from\"@material-ui/core/Button\";import TextField from\"@material-ui/core/TextField\";import{connect}from\"react-redux\";import{register}from\"../../actions/authActions\";import{withRouter}from\"react-router-dom\";var Register=/*#__PURE__*/function(_Component){_inherits(Register,_Component);function Register(){var _getPrototypeOf2;var _this;_classCallCheck(this,Register);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Register)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={name:\"\",email:\"\",password:\"\",msg:null};_this.handleChange=function(e){_this.setState(_defineProperty({},e.target.name,e.target.value));};_this.handleSubmit=function(e){e.preventDefault();var _this$state=_this.state,name=_this$state.name,email=_this$state.email,password=_this$state.password;// create new user\nvar newUser={name:name,email:email,password:password};// attempt to register\n_this.props.register(newUser,_this.props.history);};return _this;}_createClass(Register,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){//   see if error props has changed\nvar error=this.props.error;if(error!==prevProps.error){//   check for register error\nif(error&&error.id===\"REGISTER_FAIL\"){this.setState({msg:error.msg.msg});}else{this.setState({msg:null});}}}//   static getDerivedStateFromProps(nextProps) {\n//     if (nextProps.isAuthenticated) {\n//       this.props.history.push(\"/\");\n//     }\n//   }\n},{key:\"render\",value:function render(){// console.log(this.state.msg);\nreturn React.createElement(\"div\",null,React.createElement(\"form\",{noValidate:true,onSubmit:this.handleSubmit},React.createElement(\"div\",{className:\"register-container\"},React.createElement(\"h1\",null,\"Register\"),this.state.msg?React.createElement(\"span\",{className:\"red-text\"},this.state.msg):null,React.createElement(TextField,{required:true,id:\"register-name\",label:\"Name Required\",className:\"my-form\",margin:\"normal\",variant:\"outlined\",name:\"name\",onChange:this.handleChange,autoComplete:\"on\"}),React.createElement(TextField,{required:true,id:\"register-email\",label:\"Email Required\",className:\"my-form\",margin:\"normal\",variant:\"outlined\",name:\"email\",onChange:this.handleChange,autoComplete:\"on\"}),React.createElement(TextField,{required:true,id:\"register-password\",label:\"Password Required\",className:\"my-form\",type:\"password\",autoComplete:\"current-password\",margin:\"normal\",variant:\"outlined\",name:\"password\",onChange:this.handleChange}),React.createElement(Button,{className:\"my-btn\",variant:\"contained\",color:\"primary\",type:\"submit\"},\"Register\"))));}}]);return Register;}(Component);var mapStateToProps=function mapStateToProps(state){return{isAuthenticated:state.auth.isAuthenticated,error:state.error};};export default connect(mapStateToProps,{register:register})(withRouter(Register));","map":{"version":3,"sources":["/Users/katie/Desktop/Brandon projects/weather_app/client/src/components/auth/Register.js"],"names":["React","Component","Button","TextField","connect","register","withRouter","Register","state","name","email","password","msg","handleChange","e","setState","target","value","handleSubmit","preventDefault","newUser","props","history","prevProps","error","id","mapStateToProps","isAuthenticated","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { register } from \"../../actions/authActions\";\nimport { withRouter } from \"react-router-dom\";\nclass Register extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    msg: null\n  };\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object,\n    register: PropTypes.func.isRequired\n  };\n  componentDidUpdate(prevProps) {\n    //   see if error props has changed\n    const { error } = this.props;\n    if (error !== prevProps.error) {\n      //   check for register error\n      if (error && error.id === \"REGISTER_FAIL\") {\n        this.setState({ msg: error.msg.msg });\n      } else {\n        this.setState({ msg: null });\n      }\n    }\n  }\n  //   static getDerivedStateFromProps(nextProps) {\n  //     if (nextProps.isAuthenticated) {\n  //       this.props.history.push(\"/\");\n  //     }\n  //   }\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, email, password } = this.state;\n    // create new user\n    const newUser = {\n      name,\n      email,\n      password\n    };\n\n    // attempt to register\n    this.props.register(newUser, this.props.history);\n  };\n  render() {\n    // console.log(this.state.msg);\n\n    return (\n      <div>\n        {/* {this.state.msg ? <div>{this.state.msg}</div> : null} */}\n        <form noValidate onSubmit={this.handleSubmit}>\n          <div className=\"register-container\">\n            <h1>Register</h1>\n            {this.state.msg ? (\n              <span className=\"red-text\">{this.state.msg}</span>\n            ) : null}\n            <TextField\n              required\n              id=\"register-name\"\n              label=\"Name Required\"\n              className=\"my-form\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"name\"\n              onChange={this.handleChange}\n              autoComplete=\"on\"\n            />\n            <TextField\n              required\n              id=\"register-email\"\n              label=\"Email Required\"\n              className=\"my-form\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"email\"\n              onChange={this.handleChange}\n              autoComplete=\"on\"\n            />\n            {/* <span className=\"red-text\">{errors.email}</span> */}\n            <TextField\n              required\n              id=\"register-password\"\n              label=\"Password Required\"\n              className=\"my-form\"\n              type=\"password\"\n              autoComplete=\"current-password\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              name=\"password\"\n              onChange={this.handleChange}\n            />\n            {/* <span className=\"red-text\">{errors.password}</span> */}\n\n            {/* <span className=\"red-text\">{errors.password2}</span> */}\n            <Button\n              className=\"my-btn\"\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"submit\"\n            >\n              Register\n            </Button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, { register })(withRouter(Register));\n"]},"metadata":{},"sourceType":"module"}