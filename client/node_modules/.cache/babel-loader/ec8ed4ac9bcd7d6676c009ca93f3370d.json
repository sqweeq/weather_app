{"ast":null,"code":"import _defineProperty from\"/Users/katie/Desktop/Brandon projects/weather_app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/katie/Desktop/Brandon projects/weather_app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/katie/Desktop/Brandon projects/weather_app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/katie/Desktop/Brandon projects/weather_app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/katie/Desktop/Brandon projects/weather_app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/katie/Desktop/Brandon projects/weather_app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import Button from\"@material-ui/core/Button\";import TextField from\"@material-ui/core/TextField\";import{connect}from\"react-redux\";import{login,loadUser,logout}from\"../../actions/authActions\";import{withRouter}from\"react-router-dom\";var Login=/*#__PURE__*/function(_Component){_inherits(Login,_Component);function Login(){var _getPrototypeOf2;var _this;_classCallCheck(this,Login);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Login)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={email:\"\",password:\"\",msg:null};_this.onLogout=function(){_this.props.logout();};_this.handleChange=function(e){_this.setState(_defineProperty({},e.target.name,e.target.value));};_this.onSubmit=function(e){e.preventDefault();var _this$state=_this.state,email=_this$state.email,password=_this$state.password;var user={email:email,password:password};// attempt to login\n_this.props.login(user,_this.props.history);// this.props.history.push(\"/\");\n_this.props.loadUser();};return _this;}_createClass(Login,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){//   see if error props has changed\nvar error=this.props.error;if(error!==prevProps.error){//   check for register error\nif(error&&error.id===\"LOGIN_FAIL\"){this.setState({msg:error.msg.msg});}else{this.setState({msg:null});}}}// static getDerivedStateFromProps(nextProps) {\n//   if (nextProps.isAuthenticated) {\n//     this.props.history.push(\"/\");\n//   } else return null;\n// }\n},{key:\"render\",value:function render(){// console.log(this.state.msg);\nvar user=this.props.auth.user;return React.createElement(\"div\",null,this.props.isAuthenticated?React.createElement(\"div\",null,React.createElement(\"h1\",null,\"Hi \",user.name,\", you are logged in!\"),React.createElement(Button,{variant:\"outlined\",color:\"primary\",className:\"logout-button\",onClick:this.onLogout},\"Log me out\")):React.createElement(\"div\",null,React.createElement(\"form\",{noValidate:true,onSubmit:this.onSubmit},React.createElement(\"div\",{className:\"register-container\"},React.createElement(\"h1\",null,\"Login\"),this.state.msg?React.createElement(\"span\",{className:\"red-text\"},this.state.msg):null,React.createElement(TextField,{required:true,id:\"register-email\",label:\"Email Required\",className:\"my-form\",margin:\"normal\",variant:\"outlined\",name:\"email\",onChange:this.handleChange,autoComplete:\"on\"}),React.createElement(TextField,{required:true,id:\"register-password\",label:\"Password Required\",className:\"my-form\",type:\"password\",autoComplete:\"current-password\",margin:\"normal\",variant:\"outlined\",name:\"password\",onChange:this.handleChange}),React.createElement(Button,{className:\"my-btn\",variant:\"contained\",color:\"primary\",type:\"submit\"},\"Login\")))));}}]);return Login;}(Component);var mapStateToProps=function mapStateToProps(state){return{isAuthenticated:state.auth.isAuthenticated,error:state.error,auth:state.auth};};export default connect(mapStateToProps,{login:login,loadUser:loadUser,logout:logout})(withRouter(Login));","map":{"version":3,"sources":["/Users/katie/Desktop/Brandon projects/weather_app/client/src/components/auth/Login.js"],"names":["React","Component","Button","TextField","connect","login","loadUser","logout","withRouter","Login","state","email","password","msg","onLogout","props","handleChange","e","setState","target","name","value","onSubmit","preventDefault","user","history","prevProps","error","id","auth","isAuthenticated","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { login, loadUser, logout } from \"../../actions/authActions\";\nimport { withRouter } from \"react-router-dom\";\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    msg: null\n  };\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object,\n    login: PropTypes.func.isRequired,\n    loadUser: PropTypes.func.isRequired\n  };\n  onLogout = () => {\n    this.props.logout();\n  };\n  componentDidUpdate(prevProps) {\n    //   see if error props has changed\n    const { error } = this.props;\n    if (error !== prevProps.error) {\n      //   check for register error\n      if (error && error.id === \"LOGIN_FAIL\") {\n        this.setState({ msg: error.msg.msg });\n      } else {\n        this.setState({ msg: null });\n      }\n    }\n  }\n  // static getDerivedStateFromProps(nextProps) {\n  //   if (nextProps.isAuthenticated) {\n  //     this.props.history.push(\"/\");\n  //   } else return null;\n  // }\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { email, password } = this.state;\n    const user = {\n      email,\n      password\n    };\n    // attempt to login\n    this.props.login(user, this.props.history);\n    // this.props.history.push(\"/\");\n    this.props.loadUser();\n  };\n  render() {\n    // console.log(this.state.msg);\n    const { user } = this.props.auth;\n\n    return (\n      <div>\n        {this.props.isAuthenticated ? (\n          <div>\n            <h1>Hi {user.name}, you are logged in!</h1>\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              className=\"logout-button\"\n              onClick={this.onLogout}\n            >\n              Log me out\n            </Button>\n          </div>\n        ) : (\n          <div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"register-container\">\n                <h1>Login</h1>\n                {this.state.msg ? (\n                  <span className=\"red-text\">{this.state.msg}</span>\n                ) : null}\n\n                <TextField\n                  required\n                  id=\"register-email\"\n                  label=\"Email Required\"\n                  className=\"my-form\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"email\"\n                  onChange={this.handleChange}\n                  autoComplete=\"on\"\n                />\n                {/* <span className=\"red-text\">{errors.email}</span> */}\n                <TextField\n                  required\n                  id=\"register-password\"\n                  label=\"Password Required\"\n                  className=\"my-form\"\n                  type=\"password\"\n                  autoComplete=\"current-password\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  name=\"password\"\n                  onChange={this.handleChange}\n                />\n                {/* <span className=\"red-text\">{errors.password}</span> */}\n\n                {/* <span className=\"red-text\">{errors.password2}</span> */}\n                <Button\n                  className=\"my-btn\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"submit\"\n                >\n                  Login\n                </Button>\n              </div>\n            </form>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { login, loadUser, logout })(\n  withRouter(Login)\n);\n"]},"metadata":{},"sourceType":"module"}