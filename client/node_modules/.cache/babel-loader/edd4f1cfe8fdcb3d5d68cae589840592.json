{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brandon\\\\Documents\\\\projects\\\\weather_app\\\\client\\\\src\\\\components\\\\auth\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { login, loadUser, logout } from \"../../actions/authActions\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      msg: null\n    };\n\n    this.onLogout = () => {\n      this.props.logout();\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n      const user = {\n        email,\n        password\n      }; // attempt to login\n\n      this.props.login(user, this.props.history); // this.props.history.push(\"/\");\n\n      this.props.loadUser();\n    };\n  }\n\n  // get recent errors\n  componentDidUpdate(prevProps) {\n    //   see if error props has changed\n    const {\n      error\n    } = this.props;\n\n    if (error !== prevProps.error) {\n      //   check for register error\n      if (error && error.id === \"LOGIN_FAIL\") {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    }\n  }\n\n  render() {\n    // console.log(this.state.msg);\n    const {\n      user\n    } = this.props.auth;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, this.props.isAuthenticated ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, \"Hi \", user.name, \", you are logged in!\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      className: \"logout-button\",\n      onClick: this.onLogout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, \"Log me out\")) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, \"Login\"), this.state.msg ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"red-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }, this.state.msg) : null, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"register-email\",\n      label: \"Email Required\",\n      className: \"my-form\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      name: \"email\",\n      onChange: this.handleChange,\n      autoComplete: \"on\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"register-password\",\n      label: \"Password Required\",\n      className: \"my-form\",\n      type: \"password\",\n      autoComplete: \"current-password\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      name: \"password\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: \"my-btn\",\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, \"Login\")))));\n  }\n\n}\n\nLogin.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object,\n  login: PropTypes.func.isRequired,\n  loadUser: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  login,\n  loadUser,\n  logout\n})(withRouter(Login));","map":{"version":3,"sources":["C:/Users/Brandon/Documents/projects/weather_app/client/src/components/auth/Login.js"],"names":["React","Component","Button","TextField","connect","PropTypes","login","loadUser","logout","withRouter","Login","state","email","password","msg","onLogout","props","handleChange","e","setState","target","name","value","onSubmit","preventDefault","user","history","componentDidUpdate","prevProps","error","id","render","auth","isAuthenticated","propTypes","bool","object","func","isRequired","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,2BAAxC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AACA,MAAMC,KAAN,SAAoBT,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BU,KAD4B,GACpB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,GAAG,EAAE;AAHC,KADoB;;AAAA,SAa5BC,QAb4B,GAajB,MAAM;AACf,WAAKC,KAAL,CAAWR,MAAX;AACD,KAf2B;;AAAA,SA8B5BS,YA9B4B,GA8BbC,CAAC,IAAI;AAClB,WAAKC,QAAL,CAAc;AACZ,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AADd,OAAd;AAGD,KAlC2B;;AAAA,SAoC5BC,QApC4B,GAoCjBL,CAAC,IAAI;AACdA,MAAAA,CAAC,CAACM,cAAF;AACA,YAAM;AAAEZ,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAsB,KAAKF,KAAjC;AACA,YAAMc,IAAI,GAAG;AACXb,QAAAA,KADW;AAEXC,QAAAA;AAFW,OAAb,CAHc,CAOd;;AACA,WAAKG,KAAL,CAAWV,KAAX,CAAiBmB,IAAjB,EAAuB,KAAKT,KAAL,CAAWU,OAAlC,EARc,CASd;;AACA,WAAKV,KAAL,CAAWT,QAAX;AACD,KA/C2B;AAAA;;AAgB5B;AACAoB,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKb,KAAvB;;AACA,QAAIa,KAAK,KAAKD,SAAS,CAACC,KAAxB,EAA+B;AAC7B;AACA,UAAIA,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAa,YAA1B,EAAwC;AACtC,aAAKX,QAAL,CAAc;AAAEL,UAAAA,GAAG,EAAEe,KAAK,CAACf,GAAN,CAAUA;AAAjB,SAAd;AACD,OAFD,MAEO;AACL,aAAKK,QAAL,CAAc;AAAEL,UAAAA,GAAG,EAAE;AAAP,SAAd;AACD;AACF;AACF;;AAoBDiB,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AAAEN,MAAAA;AAAF,QAAW,KAAKT,KAAL,CAAWgB,IAA5B;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKhB,KAAL,CAAWiB,eAAX,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAQR,IAAI,CAACJ,IAAb,yBADF,eAEE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,SAAS,EAAC,eAHZ;AAIE,MAAA,OAAO,EAAE,KAAKN,QAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CADD,gBAaC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,UAAU,MAAhB;AAAiB,MAAA,QAAQ,EAAE,KAAKQ,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEG,KAAKZ,KAAL,CAAWG,GAAX,gBACC;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B,KAAKH,KAAL,CAAWG,GAAvC,CADD,GAEG,IAJN,eAME,oBAAC,SAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,EAAE,EAAC,gBAFL;AAGE,MAAA,KAAK,EAAC,gBAHR;AAIE,MAAA,SAAS,EAAC,SAJZ;AAKE,MAAA,MAAM,EAAC,QALT;AAME,MAAA,OAAO,EAAC,UANV;AAOE,MAAA,IAAI,EAAC,OAPP;AAQE,MAAA,QAAQ,EAAE,KAAKG,YARjB;AASE,MAAA,YAAY,EAAC,IATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,eAkBE,oBAAC,SAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,EAAE,EAAC,mBAFL;AAGE,MAAA,KAAK,EAAC,mBAHR;AAIE,MAAA,SAAS,EAAC,SAJZ;AAKE,MAAA,IAAI,EAAC,UALP;AAME,MAAA,YAAY,EAAC,kBANf;AAOE,MAAA,MAAM,EAAC,QAPT;AAQE,MAAA,OAAO,EAAC,UARV;AASE,MAAA,IAAI,EAAC,UATP;AAUE,MAAA,QAAQ,EAAE,KAAKA,YAVjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBF,eAiCE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,OAAO,EAAC,WAFV;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,IAAI,EAAC,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAjCF,CADF,CADF,CAdJ,CADF;AAgED;;AApH2B;;AAAxBP,K,CAOGwB,S,GAAY;AACjBD,EAAAA,eAAe,EAAE5B,SAAS,CAAC8B,IADV;AAEjBN,EAAAA,KAAK,EAAExB,SAAS,CAAC+B,MAFA;AAGjB9B,EAAAA,KAAK,EAAED,SAAS,CAACgC,IAAV,CAAeC,UAHL;AAIjB/B,EAAAA,QAAQ,EAAEF,SAAS,CAACgC,IAAV,CAAeC;AAJR,C;;AA+GrB,MAAMC,eAAe,GAAG5B,KAAK,KAAK;AAChCsB,EAAAA,eAAe,EAAEtB,KAAK,CAACqB,IAAN,CAAWC,eADI;AAEhCJ,EAAAA,KAAK,EAAElB,KAAK,CAACkB,KAFmB;AAGhCG,EAAAA,IAAI,EAAErB,KAAK,CAACqB;AAHoB,CAAL,CAA7B;;AAMA,eAAe5B,OAAO,CAACmC,eAAD,EAAkB;AAAEjC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAlB,CAAP,CACbC,UAAU,CAACC,KAAD,CADG,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { login, loadUser, logout } from \"../../actions/authActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nclass Login extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    msg: null\r\n  };\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    error: PropTypes.object,\r\n    login: PropTypes.func.isRequired,\r\n    loadUser: PropTypes.func.isRequired\r\n  };\r\n  onLogout = () => {\r\n    this.props.logout();\r\n  };\r\n  // get recent errors\r\n  componentDidUpdate(prevProps) {\r\n    //   see if error props has changed\r\n    const { error } = this.props;\r\n    if (error !== prevProps.error) {\r\n      //   check for register error\r\n      if (error && error.id === \"LOGIN_FAIL\") {\r\n        this.setState({ msg: error.msg.msg });\r\n      } else {\r\n        this.setState({ msg: null });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  // submit login\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const { email, password } = this.state;\r\n    const user = {\r\n      email,\r\n      password\r\n    };\r\n    // attempt to login\r\n    this.props.login(user, this.props.history);\r\n    // this.props.history.push(\"/\");\r\n    this.props.loadUser();\r\n  };\r\n  render() {\r\n    // console.log(this.state.msg);\r\n    const { user } = this.props.auth;\r\n\r\n    return (\r\n      <div>\r\n        {this.props.isAuthenticated ? (\r\n          <div>\r\n            <h1>Hi {user.name}, you are logged in!</h1>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              className=\"logout-button\"\r\n              onClick={this.onLogout}\r\n            >\r\n              Log me out\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n              <div className=\"register-container\">\r\n                <h1>Login</h1>\r\n                {this.state.msg ? (\r\n                  <span className=\"red-text\">{this.state.msg}</span>\r\n                ) : null}\r\n\r\n                <TextField\r\n                  required\r\n                  id=\"register-email\"\r\n                  label=\"Email Required\"\r\n                  className=\"my-form\"\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                  name=\"email\"\r\n                  onChange={this.handleChange}\r\n                  autoComplete=\"on\"\r\n                />\r\n                {/* <span className=\"red-text\">{errors.email}</span> */}\r\n                <TextField\r\n                  required\r\n                  id=\"register-password\"\r\n                  label=\"Password Required\"\r\n                  className=\"my-form\"\r\n                  type=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                  name=\"password\"\r\n                  onChange={this.handleChange}\r\n                />\r\n                {/* <span className=\"red-text\">{errors.password}</span> */}\r\n\r\n                {/* <span className=\"red-text\">{errors.password2}</span> */}\r\n                <Button\r\n                  className=\"my-btn\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                >\r\n                  Login\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  error: state.error,\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { login, loadUser, logout })(\r\n  withRouter(Login)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}